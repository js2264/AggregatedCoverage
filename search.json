[{"path":"/articles/tidyCoverage.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Introduction to tidyCoverage","text":"Genome-wide assays provide powerful methods profile composition, conformation activity chromatin. Linear “coverage” tracks (generally stored .bigwig files) one outputs obtained processing raw high-throughput sequencing data. coverage tracks can inspected genome interactive browsers (e.g. IGV) visually appreciate local global variations coverage specific genomic assays. coverage signal aggregated multiple genomic features can also computed. approach efficient summarize compare coverage chromatin modalities (e.g. protein binding profiles ChIP-seq, transcription profiles RNA-seq, chromatin accessibility ATAC-seq, …) hundreds thousands genomic features interest. unlocks quantitative description coverage groups genomic features. tidyCoverage implements CoverageExperiment AggregatedCoverage classes built top SummarizedExperiment class. classes formalize extraction aggregation coverage tracks sets genomic features interests.","code":""},{"path":"/articles/tidyCoverage.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Introduction to tidyCoverage","text":"tidyCoverage package can installed Bioconductor using following command:","code":"if (!require(\"BiocManager\", quietly = TRUE))     install.packages(\"BiocManager\")  BiocManager::install(\"tidyCoverage\")"},{"path":[]},{"path":"/articles/tidyCoverage.html","id":"coverageexperiment","dir":"Articles","previous_headings":"CoverageExperiment and AggregatedCoverage classes","what":"CoverageExperiment","title":"Introduction to tidyCoverage","text":"tidyCoverage package defines CoverageExperiment, directly extending SummarizedExperiment class. means standard methods available SummarizedExperiments available CoverageExperiment objects. Note whereas traditional SummarizedExperiment objects store atomic values stored individual cells assay, cell CoverageExperiment coverage assay contains list length 1, containing array. array stores per-base coverage score genomic track (colData) set genomic ranges interest (rowData).","code":"library(tidyCoverage) showClass(\"CoverageExperiment\") #> Class \"CoverageExperiment\" [package \"tidyCoverage\"] #>  #> Slots: #>                                                                  #> Name:                     rowRanges                      colData #> Class: GenomicRanges_OR_GRangesList                    DataFrame #>                                                                  #> Name:                        assays                        NAMES #> Class:               Assays_OR_NULL            character_OR_NULL #>                                                                  #> Name:               elementMetadata                     metadata #> Class:                    DataFrame                         list #>  #> Extends:  #> Class \"RangedSummarizedExperiment\", directly #> Class \"SummarizedExperiment\", by class \"RangedSummarizedExperiment\", distance 2 #> Class \"RectangularData\", by class \"RangedSummarizedExperiment\", distance 3 #> Class \"Vector\", by class \"RangedSummarizedExperiment\", distance 3 #> Class \"Annotated\", by class \"RangedSummarizedExperiment\", distance 4 #> Class \"vector_OR_Vector\", by class \"RangedSummarizedExperiment\", distance 4  data(ce) ce #> class: CoverageExperiment  #> dim: 1 2  #> metadata(0): #> assays(1): coverage #> rownames(1): Scc1 #> rowData names(2): features n #> colnames(2): RNA_fwd RNA_rev #> colData names(1): track #> width: 3000  rowData(ce) #> DataFrame with 1 row and 2 columns #>         features         n #>      <character> <integer> #> Scc1        Scc1       614  rowRanges(ce) #> GRangesList object of length 1: #> $Scc1 #> GRanges object with 614 ranges and 2 metadata columns: #>         seqnames          ranges strand |        name     score #>            <Rle>       <IRanges>  <Rle> | <character> <numeric> #>     [1]       II       4290-7289      + |     YBL109W         0 #>     [2]       II       6677-9676      + |     YBL108W         0 #>     [3]       II      7768-10767      + |   YBL107W-A         0 #>     [4]       II     22598-25597      + |     YBL102W         0 #>     [5]       II     26927-29926      + |   YBL100W-C         0 #>     ...      ...             ...    ... .         ...       ... #>   [610]       IV 1506505-1509504      + |     YDR536W         0 #>   [611]       IV 1509402-1512401      + |     YDR538W         0 #>   [612]       IV 1510594-1513593      + |     YDR539W         0 #>   [613]       IV 1521749-1524748      + |     YDR542W         0 #>   [614]       IV 1524821-1527820      + |     YDR545W         0 #>   ------- #>   seqinfo: 3 sequences from an unspecified genome  colData(ce) #> DataFrame with 2 rows and 1 column #>               track #>         <character> #> RNA_fwd     RNA_fwd #> RNA_rev     RNA_rev  assays(ce) #> List of length 1 #> names(1): coverage  assay(ce, 'coverage') #>      RNA_fwd        RNA_rev        #> Scc1 numeric,184200 numeric,184200 assay(ce, 'coverage') #>      RNA_fwd        RNA_rev        #> Scc1 numeric,184200 numeric,184200  assay(ce, 'coverage')[1, 1] |> class() #> [1] \"list\"  assay(ce, 'coverage')[1, 1] |> length() #> [1] 1  assay(ce, 'coverage')[1, 1][[1]] |> class() #> [1] \"matrix\" \"array\"  assay(ce, 'coverage')[1, 1][[1]] |> dim() #> [1] 614 300  # Compare this to `rowData(ce)$n` and `width(ce)` rowData(ce)$n #> [1] 614  width(ce) #> IntegerList of length 1 #> [[\"Scc1\"]] 3000 3000 3000 3000 3000 3000 3000 ... 3000 3000 3000 3000 3000 3000  assay(ce[1, 1], 'coverage')[[1]][1:10, 1:10] #>             [,1]       [,2]       [,3]       [,4]       [,5]       [,6] #>  [1,] -0.2573943 -0.2573943 -0.2573943 -0.2573943 -0.2573943 -0.2573943 #>  [2,] -0.2712007 -0.2712007 -0.2712007 -0.2712007 -0.2712007 -0.2712007 #>  [3,] -0.4199078 -0.4199078 -0.4199078 -0.4199078 -0.4199078 -0.4199078 #>  [4,] -0.6413458 -0.6413458 -0.6413458 -0.6413458 -0.6413458 -0.6460800 #>  [5,] -0.5558896 -0.5558896 -0.5558896 -0.5558896 -0.5558896 -0.5558896 #>  [6,]  0.5000157  0.5000157  0.5000157  0.5000157  0.5000157  0.5000157 #>  [7,] -1.1980792 -1.1980792 -1.1980792 -1.1980792 -1.1980792 -1.1980792 #>  [8,]  1.2336717  1.0952403  1.0952403  1.0952403  1.0952403  1.0952403 #>  [9,]  2.0565955  2.0565955  2.0565955  2.0565955  1.9672122  1.9289051 #> [10,] -0.6665461 -0.6665461 -0.6665461 -0.6665461 -0.6665461 -0.6665461 #>             [,7]       [,8]       [,9]      [,10] #>  [1,] -0.2573943 -0.2573943 -0.2573943 -0.2573943 #>  [2,] -0.2712007 -0.2712007 -0.2712007 -0.2712007 #>  [3,] -0.4199078 -0.4199078 -0.4199078 -0.4199078 #>  [4,] -0.6466060 -0.6466060 -0.6466060 -0.6466060 #>  [5,] -0.5558896 -0.5558896 -0.5558896 -0.5558896 #>  [6,]  0.8920222  1.1533598  1.1533598  1.1533598 #>  [7,] -1.1980792 -1.1980792 -1.1980792 -1.1980792 #>  [8,]  1.0952403  1.1311052  1.4538886  1.4538886 #>  [9,]  1.9289051  1.9289051  1.9289051  1.9289051 #> [10,] -0.6665461 -0.6140548 -0.6082225 -0.6082225"},{"path":"/articles/tidyCoverage.html","id":"aggregatedcoverage","dir":"Articles","previous_headings":"CoverageExperiment and AggregatedCoverage classes","what":"AggregatedCoverage","title":"Introduction to tidyCoverage","text":"AggregatedCoverage also directly extends SummarizedExperiment class. stores per-base coverage statistical metrics assays (e.g. mean, median, …). assay thus contains matrix vectors.","code":"showClass(\"AggregatedCoverage\") #> Class \"AggregatedCoverage\" [package \"tidyCoverage\"] #>  #> Slots: #>                                                                  #> Name:                     rowRanges                      colData #> Class: GenomicRanges_OR_GRangesList                    DataFrame #>                                                                  #> Name:                        assays                        NAMES #> Class:               Assays_OR_NULL            character_OR_NULL #>                                                                  #> Name:               elementMetadata                     metadata #> Class:                    DataFrame                         list #>  #> Extends:  #> Class \"RangedSummarizedExperiment\", directly #> Class \"SummarizedExperiment\", by class \"RangedSummarizedExperiment\", distance 2 #> Class \"RectangularData\", by class \"RangedSummarizedExperiment\", distance 3 #> Class \"Vector\", by class \"RangedSummarizedExperiment\", distance 3 #> Class \"Annotated\", by class \"RangedSummarizedExperiment\", distance 4 #> Class \"vector_OR_Vector\", by class \"RangedSummarizedExperiment\", distance 4  data(ac) ac #> class: AggregatedCoverage  #> dim: 1 2  #> metadata(0): #> assays(8): mean median ... ci_low ci_high #> rownames(1): Scc1 #> rowData names(1): features #> colnames(2): RNA_fwd RNA_rev #> colData names(1): track #> width: 3000 #> binning: 1  rowData(ac) #> DataFrame with 1 row and 1 column #>         features #>      <character> #> Scc1        Scc1  rowRanges(ac) #> GRangesList object of length 1: #> $Scc1 #> GRanges object with 614 ranges and 2 metadata columns: #>         seqnames          ranges strand |        name     score #>            <Rle>       <IRanges>  <Rle> | <character> <numeric> #>     [1]       II   234992-237991      + |     YBL002W         0 #>     [2]       II   226136-229135      + |     YBL004W         0 #>     [3]       II   215970-218969      + |     YBL005W         0 #>     [4]       II   219830-222829      + |   YBL005W-B         0 #>     [5]       II   215211-218210      + |   YBL006W-A         0 #>     ...      ...             ...    ... .         ...       ... #>   [610]       IV 1506505-1509504      + |     YDR536W         0 #>   [611]       IV 1509402-1512401      + |     YDR538W         0 #>   [612]       IV 1510594-1513593      + |     YDR539W         0 #>   [613]       IV 1521749-1524748      + |     YDR542W         0 #>   [614]       IV 1524821-1527820      + |     YDR545W         0 #>   ------- #>   seqinfo: 3 sequences from an unspecified genome  colData(ac) #> DataFrame with 2 rows and 1 column #>               track #>         <character> #> RNA_fwd     RNA_fwd #> RNA_rev     RNA_rev  assays(ac) #> List of length 8 #> names(8): mean median min max sd se ci_low ci_high  assay(ac, 'mean') #>      RNA_fwd      RNA_rev      #> Scc1 numeric,3000 numeric,3000 assay(ac[1, 1], 'mean')[[1]] |> dim() #> NULL  assay(ac[1, 1], 'mean')[[1]] |> length() #> [1] 3000  assay(ac[1, 1], 'mean')[[1]][1:10] #>  [1] -0.09209840 -0.09153138 -0.08975691 -0.09136185 -0.09145762 -0.09119866 #>  [7] -0.09120939 -0.09151991 -0.09073821 -0.09032538"},{"path":[]},{"path":"/articles/tidyCoverage.html","id":"create-a-coverageexperiment-object","dir":"Articles","previous_headings":"Manipulate CoverageExperiment objects","what":"Create a CoverageExperiment object","title":"Introduction to tidyCoverage","text":"One can use CoverageExperiment() constructor along : single bigwig file imported = \"Rle\" GRanges named GRangesList; named list bigwig files imported = \"Rle\" GRanges named GRangesList; BigWigFile object GRanges named GRangesList; named BigWigFileList object GRanges named GRangesList; numeric width argument also needs specified. used center features midpoint resize chosen width. example: works well (note case names GRangesList used rownames):","code":"library(rtracklayer) bw_file <- system.file(\"extdata\", \"MNase.bw\", package = \"tidyCoverage\") bw_file #> [1] \"/__w/_temp/Library/tidyCoverage/extdata/MNase.bw\"  bed_file <- system.file(\"extdata\", \"TSSs.bed\", package = \"tidyCoverage\") bed_file #> [1] \"/__w/_temp/Library/tidyCoverage/extdata/TSSs.bed\"  CE <- CoverageExperiment(     tracks = import(bw_file, as = \"Rle\"),      features = import(bed_file),     width = 3000 ) CE #> class: CoverageExperiment  #> dim: 1 1  #> metadata(0): #> assays(1): coverage #> rownames(1): features #> rowData names(2): features n #> colnames(1): track #> colData names(1): track #> width: 3000 library(rtracklayer) bw_file <- system.file(\"extdata\", \"MNase.bw\", package = \"tidyCoverage\") bw_file #> [1] \"/__w/_temp/Library/tidyCoverage/extdata/MNase.bw\"  bed_file <- system.file(\"extdata\", \"TSSs.bed\", package = \"tidyCoverage\") bed_file #> [1] \"/__w/_temp/Library/tidyCoverage/extdata/TSSs.bed\"  CoverageExperiment(     tracks = BigWigFile(bw_file),      features = GRangesList('TSSs' = import(bed_file)),     width = 3000 ) #> class: CoverageExperiment  #> dim: 1 1  #> metadata(0): #> assays(1): coverage #> rownames(1): TSSs #> rowData names(2): features n #> colnames(1): track #> colData names(1): track #> width: 3000"},{"path":"/articles/tidyCoverage.html","id":"bin-a-coverageexperiment-object","dir":"Articles","previous_headings":"Manipulate CoverageExperiment objects","what":"Bin a CoverageExperiment object","title":"Introduction to tidyCoverage","text":"default, CoverageExperiment objects store per-base track coverage. implies cell coverage assay many columns width provided constructor function. per-base resolution needed, one can use window argument constructor function average coverage score non-overlapping bins. CoverageExperiment object already computed, coarsen() function can used afterwards reduce resolution object.","code":"assay(CE, 'coverage')[1, 1][[1]] |> ncol() #> [1] 3000 CE2 <- CoverageExperiment(     tracks = import(bw_file, as = \"Rle\"),      features = import(bed_file),     width = 3000,      window = 20 )  CE2 #> class: CoverageExperiment  #> dim: 1 1  #> metadata(0): #> assays(1): coverage #> rownames(1): features #> rowData names(2): features n #> colnames(1): track #> colData names(1): track #> width: 3000  assay(CE2, 'coverage')[1, 1][[1]] |> ncol() #> [1] 150 CE3 <- coarsen(CE, window = 20)  CE3  #> class: CoverageExperiment  #> dim: 1 1  #> metadata(0): #> assays(1): coverage #> rownames(1): features #> rowData names(2): features n #> colnames(1): track #> colData names(1): track #> width: 3000  identical(CE2, CE3) #> [1] TRUE"},{"path":"/articles/tidyCoverage.html","id":"expand-a-coverageexperiment-object","dir":"Articles","previous_headings":"Manipulate CoverageExperiment objects","what":"Expand a CoverageExperiment object","title":"Introduction to tidyCoverage","text":"expand method tidyr package adapted CoverageExperiment objects return tidy tibble. reformated object contains several columns: track: storing colnames, .e. names tracks used original CoverageExperiment; features: storing rownames, .e. names features used original CoverageExperiment; chr: features seqnames CoverageExperiment; ranges: features CoverageExperiment coerced character; strand: features strand CoverageExperiment; coord: exact genomic position CoverageExperiment; coverage: coverage score extracted corresponding track chr:coord; coord.scaled: 0-centered genomic position; Note CoverageExperiment object coarsened using window = ..., coord coord.scaled handled correspondingly.","code":"expand(CE) #> # A tibble: 5,355,000 × 8 #> # Groups:   track, features, ranges [1,785] #>    track features chr   ranges             strand  coord coverage coord.scaled #>    <chr> <fct>    <chr> <chr>              <chr>   <dbl>    <dbl>        <dbl> #>  1 track features II    II:235967-238966:- -      235967     1.30        -1500 #>  2 track features II    II:235967-238966:- -      235968     1.30        -1499 #>  3 track features II    II:235967-238966:- -      235969     1.30        -1498 #>  4 track features II    II:235967-238966:- -      235970     1.30        -1497 #>  5 track features II    II:235967-238966:- -      235971     1.30        -1496 #>  6 track features II    II:235967-238966:- -      235972     1.30        -1495 #>  7 track features II    II:235967-238966:- -      235973     1.30        -1494 #>  8 track features II    II:235967-238966:- -      235974     1.30        -1493 #>  9 track features II    II:235967-238966:- -      235975     1.30        -1492 #> 10 track features II    II:235967-238966:- -      235976     1.30        -1491 #> # ℹ 5,354,990 more rows expand(CE3) #> # A tibble: 267,750 × 8 #> # Groups:   track, features, ranges [1,785] #>    track features chr   ranges             strand  coord coverage coord.scaled #>    <chr> <fct>    <chr> <chr>              <chr>   <dbl>    <dbl>        <dbl> #>  1 track features II    II:235967-238966:- -      235967    1.30         -1500 #>  2 track features II    II:235967-238966:- -      235987    1.30         -1480 #>  3 track features II    II:235967-238966:- -      236007    0.527        -1460 #>  4 track features II    II:235967-238966:- -      236027    0.111        -1440 #>  5 track features II    II:235967-238966:- -      236047    0.111        -1420 #>  6 track features II    II:235967-238966:- -      236067    0.111        -1400 #>  7 track features II    II:235967-238966:- -      236087    0.182        -1380 #>  8 track features II    II:235967-238966:- -      236107    0.190        -1360 #>  9 track features II    II:235967-238966:- -      236127    0.190        -1340 #> 10 track features II    II:235967-238966:- -      236147    0.189        -1320 #> # ℹ 267,740 more rows"},{"path":"/articles/tidyCoverage.html","id":"plot-coverage-of-a-set-of-tracks-over-a-single-genomic-locus","dir":"Articles","previous_headings":"Manipulate CoverageExperiment objects","what":"Plot coverage of a set of tracks over a single genomic locus","title":"Introduction to tidyCoverage","text":"illustrate visualize coverage tracks CoverageExperiment object single genomic locus interest, let’s use sample data provided tidyCoverage package. , easy (optionally) coarsen expand CoverageExperiment tibble use ggplot2 visualization.  plot, facet represents coverage different genomic track single region interest (chrII:450001-475000). facet independent scaling thanks facet_grid(..., scales = free).","code":"# ~~~~~~~~~~~~~~~ Import coverage tracks into a named list ~~~~~~~~~~~~~~~ # tracks <- list(     Scc1 = system.file(\"extdata\", \"Scc1.bw\", package = \"tidyCoverage\"),      RNA_fwd = system.file(\"extdata\", \"RNA.fwd.bw\", package = \"tidyCoverage\"),     RNA_rev = system.file(\"extdata\", \"RNA.rev.bw\", package = \"tidyCoverage\"),     PolII = system.file(\"extdata\", \"PolII.bw\", package = \"tidyCoverage\"),      MNase = system.file(\"extdata\", \"MNase.bw\", package = \"tidyCoverage\") ) |> BigWigFileList()  locus <- GRanges(\"II:450001-475000\")  # ~~~~~~~~~~~~~~~ Instantiate a CoverageExperiment object ~~~~~~~~~~~~~~~ # CE_chrII <- CoverageExperiment(     tracks = tracks,      features = locus,     width = width(locus) )  CE_chrII #> class: CoverageExperiment  #> dim: 1 5  #> metadata(0): #> assays(1): coverage #> rownames(1): features #> rowData names(2): features n #> colnames(5): Scc1 RNA_fwd RNA_rev PolII MNase #> colData names(1): track #> width: 25000 library(ggplot2) CE_chrII |>      coarsen(window = 10) |>      expand() |>      ggplot(aes(x = coord, y = coverage)) +          geom_col(aes(fill = track, col = track)) +          facet_grid(track~., scales = 'free') +          scale_x_continuous(expand = c(0, 0)) +          theme_bw() +          theme(legend.position = \"none\", aspect.ratio = 0.1)"},{"path":[]},{"path":"/articles/tidyCoverage.html","id":"aggregate-a-coverageexperiment-into-an-aggregatedcoverage-object","dir":"Articles","previous_headings":"Manipulate AggregatedCoverage objects","what":"Aggregate a CoverageExperiment into an AggregatedCoverage object","title":"Introduction to tidyCoverage","text":"often useful aggregate() genomic tracks coverage set genomic features. resulting AggregatedCoverage objects can readily coerced tibble. Note coarsen--aggregate aggregate--bin equivalent. due certain operations commutative mean (e.g. sd, min/max, …).","code":"AC <- aggregate(CE)  AC #> class: AggregatedCoverage  #> dim: 1 1  #> metadata(0): #> assays(8): mean median ... ci_low ci_high #> rownames(1): features #> rowData names(2): features n #> colnames(1): track #> colData names(1): track #> width: 3000 #> binning: 1  assay(AC, 'mean')[1, 1][[1]] |> length() #> [1] 3000 AC20 <- aggregate(CE, bin = 20) AC20 #> class: AggregatedCoverage  #> dim: 1 1  #> metadata(0): #> assays(8): mean median ... ci_low ci_high #> rownames(1): features #> rowData names(2): features n #> colnames(1): track #> colData names(1): track #> width: 3000 #> binning: 20  assay(AC20, 'mean')[1, 1][[1]] |> length() #> [1] 150 as_tibble(AC20) #> # A tibble: 150 × 13 #>    .sample .feature track features coord  mean median   min   max    sd     se #>    <chr>   <fct>    <chr> <fct>    <dbl> <dbl>  <dbl> <dbl> <dbl> <dbl>  <dbl> #>  1 track   features track features -1500  2.99   2.89     0  9.51  1.75 0.0415 #>  2 track   features track features -1480  3.01   2.92     0  9.56  1.76 0.0416 #>  3 track   features track features -1460  3.07   2.96     0 10.4   1.79 0.0425 #>  4 track   features track features -1440  3.13   3.00     0 10.4   1.81 0.0428 #>  5 track   features track features -1420  3.13   2.99     0 10.4   1.81 0.0428 #>  6 track   features track features -1400  3.12   2.98     0 10.1   1.81 0.0428 #>  7 track   features track features -1380  3.06   2.95     0  9.54  1.79 0.0424 #>  8 track   features track features -1360  3.01   2.93     0 10.2   1.79 0.0423 #>  9 track   features track features -1340  3.06   2.98     0 10.6   1.80 0.0426 #> 10 track   features track features -1320  3.03   2.95     0 10.6   1.80 0.0426 #> # ℹ 140 more rows #> # ℹ 2 more variables: ci_low <dbl>, ci_high <dbl> # Coarsen `CoverageExperiment` with `window = ...` then per-bin `aggregate`: CoverageExperiment(     tracks = import(bw_file, as = \"Rle\"), features = import(bed_file),     width = 3000 ) |>      coarsen(window = 20) |> ## FIRST COARSEN...     aggregate() |>          ## ... THEN AGGREGATE     as_tibble() #> # A tibble: 150 × 13 #>    .sample .feature track features coord  mean median   min   max    sd     se #>    <chr>   <fct>    <chr> <fct>    <dbl> <dbl>  <dbl> <dbl> <dbl> <dbl>  <dbl> #>  1 track   features track features -1500  2.99   2.95     0  9.01  1.65 0.0391 #>  2 track   features track features -1480  3.01   2.97     0  9.52  1.67 0.0396 #>  3 track   features track features -1460  3.07   3.00     0 10.4   1.70 0.0402 #>  4 track   features track features -1440  3.13   3.04     0 10.4   1.72 0.0407 #>  5 track   features track features -1420  3.13   3.01     0 10.4   1.72 0.0407 #>  6 track   features track features -1400  3.12   3.02     0  9.28  1.71 0.0405 #>  7 track   features track features -1380  3.06   3.01     0  9.23  1.70 0.0402 #>  8 track   features track features -1360  3.01   2.94     0  9.68  1.70 0.0401 #>  9 track   features track features -1340  3.06   3.01     0 10.6   1.71 0.0405 #> 10 track   features track features -1320  3.03   2.99     0 10.6   1.71 0.0404 #> # ℹ 140 more rows #> # ℹ 2 more variables: ci_low <dbl>, ci_high <dbl>  # Per-base `CoverageExperiment` then `aggregate` with `bin = ...`:  CoverageExperiment(     tracks = import(bw_file, as = \"Rle\"), features = import(bed_file),     width = 3000 ) |>      aggregate(bin = 20) |>  ## DIRECTLY AGGREGATE BY BIN     as_tibble() #> # A tibble: 150 × 13 #>    .sample .feature track features coord  mean median   min   max    sd     se #>    <chr>   <fct>    <chr> <fct>    <dbl> <dbl>  <dbl> <dbl> <dbl> <dbl>  <dbl> #>  1 track   features track features -1500  2.99   2.89     0  9.51  1.75 0.0415 #>  2 track   features track features -1480  3.01   2.92     0  9.56  1.76 0.0416 #>  3 track   features track features -1460  3.07   2.96     0 10.4   1.79 0.0425 #>  4 track   features track features -1440  3.13   3.00     0 10.4   1.81 0.0428 #>  5 track   features track features -1420  3.13   2.99     0 10.4   1.81 0.0428 #>  6 track   features track features -1400  3.12   2.98     0 10.1   1.81 0.0428 #>  7 track   features track features -1380  3.06   2.95     0  9.54  1.79 0.0424 #>  8 track   features track features -1360  3.01   2.93     0 10.2   1.79 0.0423 #>  9 track   features track features -1340  3.06   2.98     0 10.6   1.80 0.0426 #> 10 track   features track features -1320  3.03   2.95     0 10.6   1.80 0.0426 #> # ℹ 140 more rows #> # ℹ 2 more variables: ci_low <dbl>, ci_high <dbl>"},{"path":"/articles/tidyCoverage.html","id":"aggregatedcoverage-over-multiple-tracks-feature-sets","dir":"Articles","previous_headings":"Manipulate AggregatedCoverage objects","what":"AggregatedCoverage over multiple tracks / feature sets","title":"Introduction to tidyCoverage","text":"en example rest vignette, compute AggregatedCoverage object using multiple genomic track files multiple sets genomic ranges.","code":"library(purrr) #>  #> Attaching package: 'purrr' #> The following object is masked from 'package:GenomicRanges': #>  #>     reduce #> The following object is masked from 'package:IRanges': #>  #>     reduce library(plyranges) #>  #> Attaching package: 'plyranges' #> The following object is masked from 'package:IRanges': #>  #>     slice #> The following object is masked from 'package:stats': #>  #>     filter  # ~~~~~~~~~~~~~~~ Import genomic features into a named list ~~~~~~~~~~~~~~~ # features <- list(     TSSs = system.file(\"extdata\", \"TSSs.bed\", package = \"tidyCoverage\"),     `Convergent transcription` = system.file(\"extdata\", \"conv_transcription_loci.bed\", package = \"tidyCoverage\") ) |> map(import) |> map(filter, strand == '+')   # ~~~~~~~~~~~~~~~ Import coverage tracks into a named list ~~~~~~~~~~~~~~~ # tracks <- list(     Scc1 = system.file(\"extdata\", \"Scc1.bw\", package = \"tidyCoverage\"),      RNA_fwd = system.file(\"extdata\", \"RNA.fwd.bw\", package = \"tidyCoverage\"),     RNA_rev = system.file(\"extdata\", \"RNA.rev.bw\", package = \"tidyCoverage\"),     PolII = system.file(\"extdata\", \"PolII.bw\", package = \"tidyCoverage\"),      MNase = system.file(\"extdata\", \"MNase.bw\", package = \"tidyCoverage\") ) |> map(import, as = 'Rle')  # ~~~~~~~~~~~~~~~ Compute aggregated coverage ~~~~~~~~~~~~~~~ # CE <- CoverageExperiment(tracks, features, width = 5000, scale = TRUE, center = TRUE) CE #> class: CoverageExperiment  #> dim: 2 5  #> metadata(0): #> assays(1): coverage #> rownames(2): TSSs Convergent transcription #> rowData names(2): features n #> colnames(5): Scc1 RNA_fwd RNA_rev PolII MNase #> colData names(1): track #> width: 5000  AC <- aggregate(CE) AC #> class: AggregatedCoverage  #> dim: 2 5  #> metadata(0): #> assays(8): mean median ... ci_low ci_high #> rownames(2): TSSs Convergent transcription #> rowData names(2): features n #> colnames(5): Scc1 RNA_fwd RNA_rev PolII MNase #> colData names(1): track #> width: 5000 #> binning: 1"},{"path":"/articles/tidyCoverage.html","id":"plot-aggregated-coverages-with-ggplot2","dir":"Articles","previous_headings":"Manipulate AggregatedCoverage objects","what":"Plot aggregated coverages with ggplot2","title":"Introduction to tidyCoverage","text":"AggregatedCoverage objects can easily coerced tibbles, full range ggplot2 functionalities can exploited plot aggregated coverage signal multiple tracks multiple sets genomic ranges.  Oopsie, little busy . Let’s color tracks split facets features:  Nearly , cosmetic changes done!","code":"AC |>      as_tibble() |>      ggplot() +      geom_aggrcoverage() AC |>      as_tibble() |>      ggplot(aes(col = track)) +      geom_aggrcoverage() +      facet_grid(features ~ .) AC |>      as_tibble() |>      ggplot(aes(col = track, linetype = track %in% c('RNA_fwd', 'RNA_rev'))) +      geom_aggrcoverage() +      facet_grid(features ~ .) +      labs(x = 'Distance from genomic feature', y = 'Mean coverage (± 95% conf. intervale)') +      theme_bw() +      theme(legend.position = 'top')"},{"path":"/articles/tidyCoverage.html","id":"use-a-tidy-grammar","dir":"Articles","previous_headings":"","what":"Use a tidy grammar","title":"Introduction to tidyCoverage","text":"tidySummarizedExperiment package implements native tidyverse functionalities SummarizedExperiment objects extensions. tweaks way CoverageExperiment AggregatedCoverage objects look feel, change underlying data object. particular, means data wrangling verbs provided dplyr can directly work CoverageExperiment AggregatedCoverage objects, provided tidySummarizedExperiment package loaded. also means as_tibble() coercing step facultative tidySummarizedExperiment package id loaded.  Note: read tidySummarizedExperiment package overall tidyomics project, read preprint .","code":"library(tidySummarizedExperiment) #> Loading required package: ttservice CE #> # A CoverageExperiment-tibble abstraction: 10 × 7 #> # features=2 | tracks=5 | assays=coverage #> # width=5000 #>    .feature                 .sample coverage track   features      n GRangesList #>    <chr>                    <chr>   <list>   <chr>   <chr>     <int> <list>      #>  1 TSSs                     Scc1    <dbl[…]> Scc1    TSSs        869 <tibble>    #>  2 Convergent transcription Scc1    <dbl[…]> Scc1    Converge…   468 <tibble>    #>  3 TSSs                     RNA_fwd <dbl[…]> RNA_fwd TSSs        869 <tibble>    #>  4 Convergent transcription RNA_fwd <dbl[…]> RNA_fwd Converge…   468 <tibble>    #>  5 TSSs                     RNA_rev <dbl[…]> RNA_rev TSSs        869 <tibble>    #>  6 Convergent transcription RNA_rev <dbl[…]> RNA_rev Converge…   468 <tibble>    #>  7 TSSs                     PolII   <dbl[…]> PolII   TSSs        869 <tibble>    #>  8 Convergent transcription PolII   <dbl[…]> PolII   Converge…   468 <tibble>    #>  9 TSSs                     MNase   <dbl[…]> MNase   TSSs        869 <tibble>    #> 10 Convergent transcription MNase   <dbl[…]> MNase   Converge…   468 <tibble>  AC <- CE |>      filter(track == 'Scc1') |>      filter(features == 'Convergent transcription') |>      aggregate()  AC #> # An AggregatedCoverage-tibble abstraction: 5000 × 13 #> # features=1 | tracks=1 | assays=mean, median, min, max, sd, se, ci_low, #> #   ci_high #> # width=5000 | binning=1 #>    .sample .feature  track features coord   mean median   min   max    sd     se #>    <chr>   <fct>     <chr> <fct>    <dbl>  <dbl>  <dbl> <dbl> <dbl> <dbl>  <dbl> #>  1 Scc1    Converge… Scc1  Converg… -2500 -0.306 -0.649 -2.50  5.00  1.07 0.0495 #>  2 Scc1    Converge… Scc1  Converg… -2499 -0.307 -0.652 -2.50  5.00  1.07 0.0495 #>  3 Scc1    Converge… Scc1  Converg… -2498 -0.309 -0.654 -2.50  5.00  1.07 0.0494 #>  4 Scc1    Converge… Scc1  Converg… -2497 -0.310 -0.654 -2.50  5.00  1.07 0.0493 #>  5 Scc1    Converge… Scc1  Converg… -2496 -0.318 -0.666 -2.50  5.00  1.07 0.0493 #>  6 Scc1    Converge… Scc1  Converg… -2495 -0.320 -0.668 -2.50  5.00  1.07 0.0493 #>  7 Scc1    Converge… Scc1  Converg… -2494 -0.319 -0.668 -2.50  5.00  1.07 0.0494 #>  8 Scc1    Converge… Scc1  Converg… -2493 -0.322 -0.668 -2.50  5.00  1.06 0.0490 #>  9 Scc1    Converge… Scc1  Converg… -2492 -0.322 -0.667 -2.50  5.00  1.06 0.0488 #> 10 Scc1    Converge… Scc1  Converg… -2491 -0.321 -0.662 -2.50  5.00  1.06 0.0488 #> # ℹ 4,990 more rows #> # ℹ 2 more variables: ci_low <dbl>, ci_high <dbl> AC |>      ggplot() +      geom_aggrcoverage() +      labs(x = 'Distance from locus of convergent transcription', y = 'Scc1 coverage') +      theme_bw() +      theme(legend.position = 'top')"},{"path":"/articles/tidyCoverage.html","id":"example-workflow-using-tidy-grammar","dir":"Articles","previous_headings":"Use a tidy grammar","what":"Example workflow using tidy grammar","title":"Introduction to tidyCoverage","text":"","code":"CoverageExperiment(tracks, features, width = 5000, scale = TRUE, center = TRUE) |>      filter(track == 'RNA_fwd') |>      aggregate(bin = 20) |>      ggplot(col = features) +      geom_aggrcoverage(aes(col = features)) +      labs(x = 'Distance to center of genomic features', y = 'Forward RNA-seq coverage') +      theme_bw() +      theme(legend.position = 'top')"},{"path":[]},{"path":"/articles/tidyCoverage.html","id":"recover-tsss-of-forward-human-genes","dir":"Articles","previous_headings":"Example use case: AnnotationHub and TxDb resources","what":"Recover TSSs of forward human genes","title":"Introduction to tidyCoverage","text":"Let’s first fetch features interest human TxDb resources. 1bp-wide GRanges correspond forward TSSs genomic positions.","code":"txdb <- TxDb.Hsapiens.UCSC.hg19.knownGene::TxDb.Hsapiens.UCSC.hg19.knownGene TSSs <- GenomicFeatures::genes(txdb) |>      filter(strand == '+') |>      anchor_5p() |>      mutate(width = 1) #>   403 genes were dropped because they have exons located on both strands #>   of the same reference sequence or on more than one reference sequence, #>   so cannot be represented by a single genomic range. #>   Use 'single.strand.genes.only=FALSE' to get all the genes in a #>   GRangesList object, or use suppressMessages() to suppress this message."},{"path":"/articles/tidyCoverage.html","id":"recover-h3k4me3-coverage-track-from-encode","dir":"Articles","previous_headings":"Example use case: AnnotationHub and TxDb resources","what":"Recover H3K4me3 coverage track from ENCODE","title":"Introduction to tidyCoverage","text":"Let’s also fetch real-life ChIP-seq dataset (e.g. H3K4me3) ENCODE stored AnnotationHub:","code":"library(AnnotationHub) #> Loading required package: BiocFileCache #> Loading required package: dbplyr #>  #> Attaching package: 'dbplyr' #> The following objects are masked from 'package:dplyr': #>  #>     ident, sql #>  #> Attaching package: 'AnnotationHub' #> The following object is masked from 'package:rtracklayer': #>  #>     hubUrl #> The following object is masked from 'package:Biobase': #>  #>     cache ah <- AnnotationHub() ah['AH34904'] #> AnnotationHub with 1 record #> # snapshotDate(): 2024-06-27 #> # names(): AH34904 #> # $dataprovider: BroadInstitute #> # $species: Homo sapiens #> # $rdataclass: BigWigFile #> # $rdatadateadded: 2015-05-07 #> # $title: UCSD.H1.H3K4me3.LL227.fc.signal.bigwig #> # $description: Bigwig File containing fold enrichment signal tracks from Ep... #> # $taxonomyid: 9606 #> # $genome: hg19 #> # $sourcetype: BigWig #> # $sourceurl: http://egg2.wustl.edu/roadmap/data/byFileType/signal/unconsoli... #> # $sourcesize: 97131347 #> # $tags: c(\"EpigenomeRoadMap\", \"signal\", \"unconsolidated\", #> #   \"foldChange\", \"NA\")  #> # retrieve record with 'object[[\"AH34904\"]]' H3K4me3_bw <- ah[['AH34904']] #> loading from cache  H3K4me3_bw #> BigWigFile object #> resource: /github/home/.cache/R/AnnotationHub/66c5437bee7_40344"},{"path":"/articles/tidyCoverage.html","id":"compute-the-aggregated-coverage-of-h3k4me3-3kb-around-the-tsss-of-forward-human-genes","dir":"Articles","previous_headings":"Example use case: AnnotationHub and TxDb resources","what":"Compute the aggregated coverage of H3K4me3 ± 3kb around the TSSs of forward human genes","title":"Introduction to tidyCoverage","text":"can now extract coverage H3K4me3 human forward TSSs (± 3kb) aggregate coverage.  obtain typical profile enrichment H3K4me3 +1 nucleosome.","code":"CoverageExperiment(     H3K4me3_bw, TSSs,      width = 6000,      scale = TRUE, center = TRUE ) |>      aggregate() |>      ggplot() +      geom_aggrcoverage(aes(col = track)) +      facet_grid(track ~ .) +      labs(x = 'Distance from TSSs', y = 'Mean coverage') +      theme_bw() +      theme(legend.position = 'top')"},{"path":"/articles/tidyCoverage.html","id":"with-more-genomic-tracks","dir":"Articles","previous_headings":"Example use case: AnnotationHub and TxDb resources","what":"With more genomic tracks","title":"Introduction to tidyCoverage","text":"complex example fetches collection 15 different ChIP-seq genomic tracks check profile enrichment human forward TSSs.","code":"# ~~~~~~~~~~ Recover 15 different histone PTM ChIP-seq tracks ~~~~~~~~~~ # ids <- c(     'AH35163', 'AH35165', 'AH35167', 'AH35170', 'AH35173', 'AH35176',      'AH35178', 'AH35180', 'AH35182', 'AH35185', 'AH35187', 'AH35189',      'AH35191', 'AH35193', 'AH35196' ) names(ids) <- mcols(ah[ids])$title |>      gsub(\".*IMR90.\", \"\", x = _) |>      gsub(\"\\\\..*\", \"\", x = _) bws <- map(ids, ~ ah[[.x]]) |>      map(resource) |>      BigWigFileList() names(bws) <- names(ids)  # ~~~~~~~~~~ Computing coverage over TSSs ~~~~~~~~~~ # AC <- CoverageExperiment(     bws, TSSs,      width = 4000,      scale = TRUE, center = TRUE ) |> aggregate()  # ~~~~~~~~~~ Plot the resulting AggregatedCoverage object ~~~~~~~~~~ # AC |>      as_tibble() |>      mutate(         histone = dplyr::case_when(             stringr::str_detect(track, 'H2A') ~ \"H2A\",              stringr::str_detect(track, 'H2B') ~ \"H2B\",              stringr::str_detect(track, 'H3') ~ \"H3\"         )     ) |>      ggplot() +      geom_aggrcoverage(aes(col = track)) +      facet_grid(~histone) +      labs(x = 'Distance from TSSs', y = 'Mean histone PTM coverage') +      theme_bw() +      theme(legend.position = 'top') +      hues::scale_colour_iwanthue() +      hues::scale_fill_iwanthue()"},{"path":"/articles/tidyCoverage.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Introduction to tidyCoverage","text":"","code":"sessionInfo() #> R version 4.4.1 (2024-06-14) #> Platform: x86_64-pc-linux-gnu #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               #>  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8     #>  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8    #>  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                  #>  [9] LC_ADDRESS=C               LC_TELEPHONE=C             #> [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C        #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] AnnotationHub_3.13.0            BiocFileCache_2.13.0            #>  [3] dbplyr_2.5.0                    tidyr_1.3.1                     #>  [5] dplyr_1.1.4                     tidySummarizedExperiment_1.15.0 #>  [7] ttservice_0.4.1                 plyranges_1.25.0                #>  [9] purrr_1.0.2                     ggplot2_3.5.1                   #> [11] rtracklayer_1.65.0              tidyCoverage_1.1.1              #> [13] SummarizedExperiment_1.35.1     Biobase_2.65.0                  #> [15] GenomicRanges_1.57.1            GenomeInfoDb_1.41.1             #> [17] IRanges_2.39.2                  S4Vectors_0.43.2                #> [19] BiocGenerics_0.51.0             MatrixGenerics_1.17.0           #> [21] matrixStats_1.3.0               BiocStyle_2.33.1                #>  #> loaded via a namespace (and not attached): #>  [1] DBI_1.2.3                               #>  [2] bitops_1.0-7                            #>  [3] rlang_1.1.4                             #>  [4] magrittr_2.0.3                          #>  [5] compiler_4.4.1                          #>  [6] RSQLite_2.3.7                           #>  [7] GenomicFeatures_1.57.0                  #>  [8] png_0.1-8                               #>  [9] systemfonts_1.1.0                       #> [10] vctrs_0.6.5                             #> [11] stringr_1.5.1                           #> [12] pkgconfig_2.0.3                         #> [13] crayon_1.5.3                            #> [14] fastmap_1.2.0                           #> [15] XVector_0.45.0                          #> [16] ellipsis_0.3.2                          #> [17] labeling_0.4.3                          #> [18] utf8_1.2.4                              #> [19] Rsamtools_2.21.0                        #> [20] rmarkdown_2.27                          #> [21] UCSC.utils_1.1.0                        #> [22] ragg_1.3.2                              #> [23] bit_4.0.5                               #> [24] xfun_0.46                               #> [25] zlibbioc_1.51.1                         #> [26] cachem_1.1.0                            #> [27] jsonlite_1.8.8                          #> [28] blob_1.2.4                              #> [29] highr_0.11                              #> [30] DelayedArray_0.31.9                     #> [31] BiocParallel_1.39.0                     #> [32] parallel_4.4.1                          #> [33] R6_2.5.1                                #> [34] bslib_0.7.0                             #> [35] stringi_1.8.4                           #> [36] jquerylib_0.1.4                         #> [37] bookdown_0.40                           #> [38] knitr_1.48                              #> [39] Matrix_1.7-0                            #> [40] tidyselect_1.2.1                        #> [41] abind_1.4-5                             #> [42] yaml_2.3.9                              #> [43] codetools_0.2-20                        #> [44] curl_5.2.1                              #> [45] lattice_0.22-6                          #> [46] tibble_3.2.1                            #> [47] KEGGREST_1.45.1                         #> [48] withr_3.0.0                             #> [49] evaluate_0.24.0                         #> [50] desc_1.4.3                              #> [51] Biostrings_2.73.1                       #> [52] filelock_1.0.3                          #> [53] pillar_1.9.0                            #> [54] BiocManager_1.30.23                     #> [55] TxDb.Hsapiens.UCSC.hg19.knownGene_3.2.2 #> [56] plotly_4.10.4                           #> [57] generics_0.1.3                          #> [58] RCurl_1.98-1.16                         #> [59] BiocVersion_3.20.0                      #> [60] munsell_0.5.1                           #> [61] scales_1.3.0                            #> [62] glue_1.7.0                              #> [63] lazyeval_0.2.2                          #> [64] tools_4.4.1                             #> [65] BiocIO_1.15.0                           #> [66] data.table_1.15.4                       #> [67] GenomicAlignments_1.41.0                #> [68] fs_1.6.4                                #> [69] XML_3.99-0.17                           #> [70] grid_4.4.1                              #> [71] AnnotationDbi_1.67.0                    #> [72] colorspace_2.1-0                        #> [73] GenomeInfoDbData_1.2.12                 #> [74] restfulr_0.0.15                         #> [75] cli_3.6.3                               #> [76] rappdirs_0.3.3                          #> [77] textshaping_0.4.0                       #> [78] fansi_1.0.6                             #> [79] S4Arrays_1.5.5                          #> [80] viridisLite_0.4.2                       #> [81] gtable_0.3.5                            #> [82] sass_0.4.9                              #> [83] digest_0.6.36                           #> [84] SparseArray_1.5.25                      #> [85] rjson_0.2.21                            #> [86] htmlwidgets_1.6.4                       #> [87] farver_2.1.2                            #> [88] memoise_2.0.1                           #> [89] htmltools_0.5.8.1                       #> [90] pkgdown_2.1.0                           #> [91] lifecycle_1.0.4                         #> [92] httr_1.4.7                              #> [93] mime_0.12                               #> [94] bit64_4.0.5"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jacques Serizay. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Jacques (2024). Jacques' Package. doi:10.18129/B9.bioc.AggregatedCoverage, https://github.com//AggregatedCoverage - R package version 1.1.1, http://www.bioconductor.org/packages/AggregatedCoverage. Jacques (2024). “Jacques' Package.” bioRxiv. doi:10.1101/TODO, https://www.biorxiv.org/content/10.1101/TODO.","code":"@Manual{,   title = {Jacques' Package},   author = {{Jacques}},   year = {2024},   url = {http://www.bioconductor.org/packages/AggregatedCoverage},   note = {https://github.com//AggregatedCoverage - R package version 1.1.1},   doi = {10.18129/B9.bioc.AggregatedCoverage}, } @Article{,   title = {Jacques' Package},   author = {{Jacques}},   year = {2024},   journal = {bioRxiv},   doi = {10.1101/TODO},   url = {https://www.biorxiv.org/content/10.1101/TODO}, }"},{"path":"/index.html","id":"tidycoverage","dir":"","previous_headings":"","what":"Extract and aggregate genomic coverage over features of interest","title":"Extract and aggregate genomic coverage over features of interest","text":"tidyCoverage R package provides framework rapid investigation collections genomic tracks genomic features, relying principle tidy data manipulation. relies CoverageExperiment AggregatedCoverage classes, directly extending SummarizedExperiment fundamental class,","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Extract and aggregate genomic coverage over features of interest","text":"R >= 4.4 Bioconductor >= 3.19:","code":"if (!require(\"BiocManager\", quietly = TRUE))     install.packages(\"BiocManager\")  BiocManager::install(\"tidyCoverage\")"},{"path":"/index.html","id":"load-libraries-and-example-datasets","dir":"","previous_headings":"","what":"Load libraries and example datasets","title":"Extract and aggregate genomic coverage over features of interest","text":"","code":"library(tidyCoverage) library(tidySummarizedExperiment) library(rtracklayer) library(plyranges) library(purrr) library(ggplot2)  # ~~~~~~~~~~~~~~~ Import genomic features into a named list ~~~~~~~~~~~~~~~ # features <- list(     TSSs = system.file(\"extdata\", \"TSSs.bed\", package = \"tidyCoverage\"),     conv_sites = system.file(\"extdata\", \"conv_transcription_loci.bed\", package = \"tidyCoverage\") ) |> map(~ import(.x))  # ~~~~~~~~~~~~ Import coverage tracks into a `BigWigFileList` ~~~~~~~~~~~~~ # tracks <- list(     Scc1 = system.file(\"extdata\", \"Scc1.bw\", package = \"tidyCoverage\"),      RNA_fwd = system.file(\"extdata\", \"RNA.fwd.bw\", package = \"tidyCoverage\"),     RNA_rev = system.file(\"extdata\", \"RNA.rev.bw\", package = \"tidyCoverage\"),     PolII = system.file(\"extdata\", \"PolII.bw\", package = \"tidyCoverage\"),      MNase = system.file(\"extdata\", \"MNase.bw\", package = \"tidyCoverage\") ) |> BigWigFileList()"},{"path":"/index.html","id":"extract-coverage-for-each-track-over-each-set-of-features","dir":"","previous_headings":"","what":"Extract coverage for each track over each set of features","title":"Extract and aggregate genomic coverage over features of interest","text":"","code":"CE <- CoverageExperiment(tracks, features, width = 5000, ignore.strand = FALSE)"},{"path":"/index.html","id":"plot-tracks-coverage-aggregated-over-genomic-features","dir":"","previous_headings":"","what":"Plot tracks coverage aggregated over genomic features","title":"Extract and aggregate genomic coverage over features of interest","text":"","code":"CE |>      filter(track %in% c('MNase', 'PolII')) |>      filter(features == 'TSSs') |>      aggregate() |>      ggplot() +      geom_aggrcoverage(aes(col = track)) +      facet_grid(track ~ ., scales = \"free\") +      labs(x = 'Distance from TSS', y = 'Signal coverage')"},{"path":"/index.html","id":"plot-coverage-over-a-single-locus","dir":"","previous_headings":"","what":"Plot coverage over a single locus","title":"Extract and aggregate genomic coverage over features of interest","text":"","code":"CoverageExperiment(tracks, GRanges(\"II:450001-455000\")) |>      expand() |>      ggplot() +      geom_coverage(aes(fill = track)) +      facet_grid(track~., scales = 'free')"},{"path":"/index.html","id":"related-projects","dir":"","previous_headings":"","what":"Related projects","title":"Extract and aggregate genomic coverage over features of interest","text":"number CRAN, Bioconductor GitHub packages already exist enable genomic track data visualization, instance: Gviz [Bioconductor] soGGi [Bioconductor] GenomicPlot [Bioconductor] plotgardener [Bioconductor] genomation [Bioconductor] ggcoverage [GitHub] GenomicScores [Bioconductor] Compared existing solutions, tidyCoverage directly extends SummarizedExperiment infrastructure follows tidy “omics” principles. directly provide plotting functionalities, instead focuses data recovery, structure coercion, using familiar grammar standard representation data. ensures seamless integration genomic track investigation exisiting Bioconductor data analysis workflows.","code":""},{"path":"/reference/AggregatedCoverage.html","id":null,"dir":"Reference","previous_headings":"","what":"aggregate — AggregatedCoverage","title":"aggregate — AggregatedCoverage","text":"Bin coverage contained CoverageExperiment AggregatedCoverage object.","code":""},{"path":"/reference/AggregatedCoverage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"aggregate — AggregatedCoverage","text":"","code":"# S4 method for class 'CoverageExperiment' aggregate(x, bin = 1, ...)"},{"path":"/reference/AggregatedCoverage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"aggregate — AggregatedCoverage","text":"x CoverageExperiment object bin integer bin assay . width AggregatedCoverage object multiple bin. ... ignored","code":""},{"path":"/reference/AggregatedCoverage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"aggregate — AggregatedCoverage","text":"AggregatedCoverage object","code":""},{"path":"/reference/AggregatedCoverage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"aggregate — AggregatedCoverage","text":"","code":"data(ce) aggregate(ce, bin = 10) #> class: AggregatedCoverage  #> dim: 1 2  #> metadata(0): #> assays(8): mean median ... ci_low ci_high #> rownames(1): Scc1 #> rowData names(2): features n #> colnames(2): RNA_fwd RNA_rev #> colData names(1): track #> width: 3000 #> binning: 100"},{"path":"/reference/CoverageExperiment.html","id":null,"dir":"Reference","previous_headings":"","what":"CoverageExperiment — CoverageExperiment","title":"CoverageExperiment — CoverageExperiment","text":"#' @description","code":""},{"path":"/reference/CoverageExperiment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CoverageExperiment — CoverageExperiment","text":"","code":"CoverageExperiment(tracks, features, ...)  coarsen(x, window, ...)  # S4 method for class 'BigWigFileList,GRangesList' CoverageExperiment(   tracks,   features,   width = NULL,   center = FALSE,   scale = FALSE,   ignore.strand = TRUE,   window = 1,   BPPARAM = BiocParallel::bpparam() )  # S4 method for class 'BigWigFileList,GRanges' CoverageExperiment(tracks, features, ...)  # S4 method for class 'BigWigFileList,list' CoverageExperiment(tracks, features, ...)  # S4 method for class 'BigWigFile,GRangesList' CoverageExperiment(tracks, features, ...)  # S4 method for class 'BigWigFile,GRanges' CoverageExperiment(tracks, features, ...)  # S4 method for class 'BigWigFile,list' CoverageExperiment(tracks, features, ...)  # S4 method for class 'list,GRangesList' CoverageExperiment(   tracks,   features,   width = NULL,   center = FALSE,   scale = FALSE,   ignore.strand = TRUE,   window = 1,   BPPARAM = BiocParallel::bpparam() )  # S4 method for class 'list,GRanges' CoverageExperiment(tracks, features, ...)  # S4 method for class 'list,list' CoverageExperiment(tracks, features, ...)  # S4 method for class 'RleList,GRangesList' CoverageExperiment(tracks, features, ...)  # S4 method for class 'RleList,GRanges' CoverageExperiment(tracks, features, ...)  # S4 method for class 'RleList,list' CoverageExperiment(tracks, features, ...)  # S4 method for class 'CoverageExperiment' coarsen(x, window = 1, BPPARAM = BiocParallel::bpparam())"},{"path":"/reference/CoverageExperiment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CoverageExperiment — CoverageExperiment","text":"tracks genomic track imported RleList named list genomic tracks. features set features imported GRanges named GRangesList. ... Passed relevant method x CoverageExperiment object window integer coarsen coverage . width Width resize set genomic features scale, center Logical, whether scale /center tracks prior summarization ignore.strand Logical, whether take features strand information BPPARAM Passed BiocParallel.","code":""},{"path":"/reference/CoverageExperiment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CoverageExperiment — CoverageExperiment","text":"CoverageExperiment object","code":""},{"path":"/reference/CoverageExperiment.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"CoverageExperiment — CoverageExperiment","text":"CoverageExperiment objects store coverages individual tracks different sets features. coverage assay contains separate matrix combination track x features. CoverageExperiment objects instantiated using CoverageExperiment() #' function, can coarsened using coarsen() function.","code":""},{"path":"/reference/CoverageExperiment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CoverageExperiment — CoverageExperiment","text":"","code":"library(rtracklayer) library(purrr) #>  #> Attaching package: ‘purrr’ #> The following object is masked from ‘package:GenomicRanges’: #>  #>     reduce #> The following object is masked from ‘package:IRanges’: #>  #>     reduce library(plyranges) #>  #> Attaching package: ‘plyranges’ #> The following object is masked from ‘package:IRanges’: #>  #>     slice #> The following object is masked from ‘package:stats’: #>  #>     filter TSSs_bed <- system.file(\"extdata\", \"TSSs.bed\", package = \"tidyCoverage\") features <- import(TSSs_bed) |> filter(strand == '+')  ############################################################################# ## 1. Creating a `CoverageExperiment` object from a single BigWigFile #############################################################################  RNA_fwd <- system.file(\"extdata\", \"RNA.fwd.bw\", package = \"tidyCoverage\") tracks <- BigWigFile(RNA_fwd) CoverageExperiment(tracks, features, width = 5000) #> class: CoverageExperiment  #> dim: 1 1  #> metadata(0): #> assays(1): coverage #> rownames(1): features #> rowData names(2): features n #> colnames(1): track #> colData names(1): track #> width: 5000  ############################################################################# ## 2. Creating a `CoverageExperiment` object from a BigWigFileList #############################################################################  RNA_rev <- system.file(\"extdata\", \"RNA.rev.bw\", package = \"tidyCoverage\") tracks <- BigWigFileList(list(RNA_fwd = RNA_fwd, RNA_rev = RNA_rev)) CoverageExperiment(tracks, features, width = 5000) #> class: CoverageExperiment  #> dim: 1 2  #> metadata(0): #> assays(1): coverage #> rownames(1): features #> rowData names(2): features n #> colnames(2): RNA_fwd RNA_rev #> colData names(1): track #> width: 5000  ############################################################################# ## 3. Creating a `CoverageExperiment` object from imported bigwig files #############################################################################  tracks <- list(     RNA_fwd = system.file(\"extdata\", \"RNA.fwd.bw\", package = \"tidyCoverage\"),     RNA_rev = system.file(\"extdata\", \"RNA.rev.bw\", package = \"tidyCoverage\") ) |> map(import, as = 'Rle') CoverageExperiment(tracks, features, width = 5000) #> class: CoverageExperiment  #> dim: 1 2  #> metadata(0): #> assays(1): coverage #> rownames(1): features #> rowData names(2): features n #> colnames(2): RNA_fwd RNA_rev #> colData names(1): track #> width: 5000  ############################################################################# ## 4. Correct for strandness when recovering coverage #############################################################################  TSSs_bed <- system.file(\"extdata\", \"TSSs.bed\", package = \"tidyCoverage\") features <- list(     TSS_fwd = import(TSSs_bed) |> filter(strand == '+'),      TSS_rev = import(TSSs_bed) |> filter(strand == '-') ) tracks <- list(     RNA_fwd = system.file(\"extdata\", \"RNA.fwd.bw\", package = \"tidyCoverage\"),     RNA_rev = system.file(\"extdata\", \"RNA.rev.bw\", package = \"tidyCoverage\") ) |> map(import, as = 'Rle') CoverageExperiment(tracks, features, width = 5000, ignore.strand = FALSE) #> class: CoverageExperiment  #> dim: 2 2  #> metadata(0): #> assays(1): coverage #> rownames(2): TSS_fwd TSS_rev #> rowData names(2): features n #> colnames(2): RNA_fwd RNA_rev #> colData names(1): track #> width: 5000  ############################################################################# ## Aggregating a `CoverageExperiment` object ############################################################################# data(ce) coarsen(ce, window = 10) #> class: CoverageExperiment  #> dim: 1 2  #> metadata(0): #> assays(1): coverage #> rownames(1): Scc1 #> rowData names(2): features n #> colnames(2): RNA_fwd RNA_rev #> colData names(1): track #> width: 3000"},{"path":"/reference/as_tibble-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"as_tibble — as_tibble-methods","title":"as_tibble — as_tibble-methods","text":"Coerce CoverageExperiment AggregatedCoverage object tibble","code":""},{"path":"/reference/as_tibble-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"as_tibble — as_tibble-methods","text":"","code":"# S3 method for class 'AggregatedCoverage' as_tibble(x, ...)"},{"path":"/reference/as_tibble-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"as_tibble — as_tibble-methods","text":"x CoverageExperiment object ... ignored","code":""},{"path":"/reference/as_tibble-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"as_tibble — as_tibble-methods","text":"tibble","code":""},{"path":"/reference/as_tibble-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"as_tibble — as_tibble-methods","text":"","code":"data(ac) as_tibble(ac) #> # A tibble: 6,000 × 13 #>    .sample .feature track features coord    mean median   min   max    sd     se #>    <chr>   <fct>    <chr> <fct>    <dbl>   <dbl>  <dbl> <dbl> <dbl> <dbl>  <dbl> #>  1 RNA_fwd Scc1     RNA_… Scc1     -1500 -0.0921 -0.611 -3.25  10.5  1.42 0.0572 #>  2 RNA_fwd Scc1     RNA_… Scc1     -1499 -0.0915 -0.609 -3.25  10.5  1.42 0.0572 #>  3 RNA_fwd Scc1     RNA_… Scc1     -1498 -0.0898 -0.609 -3.25  10.5  1.42 0.0573 #>  4 RNA_fwd Scc1     RNA_… Scc1     -1497 -0.0914 -0.609 -3.25  10.5  1.42 0.0573 #>  5 RNA_fwd Scc1     RNA_… Scc1     -1496 -0.0915 -0.609 -3.25  10.5  1.42 0.0573 #>  6 RNA_fwd Scc1     RNA_… Scc1     -1495 -0.0912 -0.609 -3.25  10.5  1.42 0.0572 #>  7 RNA_fwd Scc1     RNA_… Scc1     -1494 -0.0912 -0.609 -3.25  10.5  1.42 0.0572 #>  8 RNA_fwd Scc1     RNA_… Scc1     -1493 -0.0915 -0.609 -3.25  10.5  1.42 0.0572 #>  9 RNA_fwd Scc1     RNA_… Scc1     -1492 -0.0907 -0.609 -3.25  10.5  1.42 0.0573 #> 10 RNA_fwd Scc1     RNA_… Scc1     -1491 -0.0903 -0.609 -3.25  10.5  1.42 0.0572 #> # ℹ 5,990 more rows #> # ℹ 2 more variables: ci_low <dbl>, ci_high <dbl>"},{"path":"/reference/data.html","id":null,"dir":"Reference","previous_headings":"","what":"Example CoverageExperiment and AggregatedCoverage objects — data","title":"Example CoverageExperiment and AggregatedCoverage objects — data","text":"Two example objects provided tidyCoverage package: ce: CoverageExperiment dataset containing stranded RNA-seq coverage (forward reverse) Scc1 peaks (± 1kb). ac: AggregatedCoverage object obtained aggregate(ce).","code":""},{"path":"/reference/data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example CoverageExperiment and AggregatedCoverage objects — data","text":"","code":"data(ce)  data(ac)"},{"path":"/reference/data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example CoverageExperiment and AggregatedCoverage objects — data","text":"CoverageExperiment object containing 1 features set 2 tracks. AggregatedCoverage object containing 1 features set 2 tracks.","code":""},{"path":"/reference/data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Example CoverageExperiment and AggregatedCoverage objects — data","text":"Data generated yeast (S288c) aligned reference R64-1-1.","code":""},{"path":"/reference/expand.html","id":null,"dir":"Reference","previous_headings":"","what":"Expand a CoverageExperiment object — expand,CoverageExperiment","title":"Expand a CoverageExperiment object — expand,CoverageExperiment","text":"CoverageExperiment object can coerced tibble using tidySummarizedExperiment package, turn coverage matrix \"long\" format. expand function provided allows one coerce CoverageExperiment object long data frame, adds ranges seqnames resulting tibble.","code":""},{"path":"/reference/expand.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expand a CoverageExperiment object — expand,CoverageExperiment","text":"","code":"# S3 method for class 'CoverageExperiment' expand(data, ..., .name_repair = NULL)"},{"path":"/reference/expand.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expand a CoverageExperiment object — expand,CoverageExperiment","text":"data CoverageExperiment object ..., .name_repair ignored","code":""},{"path":"/reference/expand.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expand a CoverageExperiment object — expand,CoverageExperiment","text":"tibble object","code":""},{"path":"/reference/expand.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expand a CoverageExperiment object — expand,CoverageExperiment","text":"","code":"data(ce) ce #> class: CoverageExperiment  #> dim: 1 2  #> metadata(0): #> assays(1): coverage #> rownames(1): Scc1 #> rowData names(2): features n #> colnames(2): RNA_fwd RNA_rev #> colData names(1): track #> width: 3000  expand(ce) #> # A tibble: 368,400 × 8 #> # Groups:   track, features, ranges [1,228] #>    track   features chr   ranges         strand coord coverage coord.scaled #>    <chr>   <fct>    <chr> <chr>          <chr>  <dbl>    <dbl>        <dbl> #>  1 RNA_fwd Scc1     II    II:4290-7289:+ +       4290   -0.257        -1500 #>  2 RNA_fwd Scc1     II    II:4290-7289:+ +       4300   -0.257        -1490 #>  3 RNA_fwd Scc1     II    II:4290-7289:+ +       4310   -0.257        -1480 #>  4 RNA_fwd Scc1     II    II:4290-7289:+ +       4320   -0.257        -1470 #>  5 RNA_fwd Scc1     II    II:4290-7289:+ +       4330   -0.257        -1460 #>  6 RNA_fwd Scc1     II    II:4290-7289:+ +       4340   -0.257        -1450 #>  7 RNA_fwd Scc1     II    II:4290-7289:+ +       4350   -0.257        -1440 #>  8 RNA_fwd Scc1     II    II:4290-7289:+ +       4360   -0.257        -1430 #>  9 RNA_fwd Scc1     II    II:4290-7289:+ +       4370   -0.257        -1420 #> 10 RNA_fwd Scc1     II    II:4290-7289:+ +       4380   -0.257        -1410 #> # ℹ 368,390 more rows"},{"path":"/reference/ggplot-tidyCoverage.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting functions — ggplot-tidyCoverage","title":"Plotting functions — ggplot-tidyCoverage","text":"#' @description","code":""},{"path":"/reference/ggplot-tidyCoverage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting functions — ggplot-tidyCoverage","text":"","code":"geom_aggrcoverage(   mapping = NULL,   data = NULL,   ...,   unit = c(\"kb\", \"Mb\", \"b\"),   ci = TRUE,   grid = FALSE,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )  geom_coverage(   mapping = NULL,   data = NULL,   ...,   type = c(\"area\", \"line\"),   unit = c(\"kb\", \"Mb\", \"b\"),   grid = FALSE,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )  scale_y_coverage()  scale_x_genome(unit = c(\"kb\", \"Mb\", \"b\"))"},{"path":"/reference/ggplot-tidyCoverage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting functions — ggplot-tidyCoverage","text":"mapping Aesthetics geom_*. default, color/fill aesthetic specified, can assigned variable mapping = aes(...). Note x y automatically filled. data Data frame passed geom_*. Typically CoverageExperiment object (expanded tibble) AggregatedCoverage object. ..., na.rm, show.legend, inherit.aes Argument passed ggplot internal functions unit Rounding x axis (c('b', 'kb', 'Mb')). ci confidence interval plotted geom_aggrcoverage()? (default: TRUE) grid plot grid displayed? (default: FALSE). type Choose \"line\" \"area\" style geom_coverage().","code":""},{"path":"/reference/ggplot-tidyCoverage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plotting functions — ggplot-tidyCoverage","text":"ggplot object`","code":""},{"path":"/reference/ggplot-tidyCoverage.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plotting functions — ggplot-tidyCoverage","text":"Plotting functions tidyCoverage objects","code":""},{"path":"/reference/ggplot-tidyCoverage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plotting functions — ggplot-tidyCoverage","text":"","code":"library(rtracklayer) library(plyranges) library(ggplot2) library(purrr) TSSs_bed <- system.file(\"extdata\", \"TSSs.bed\", package = \"tidyCoverage\") features <- list(     TSS_fwd = import(TSSs_bed) |> filter(strand == '+'),      TSS_rev = import(TSSs_bed) |> filter(strand == '-'),      conv_sites = import(system.file(\"extdata\", \"conv_transcription_loci.bed\", package = \"tidyCoverage\")) ) tracks <- list(     RNA_fwd = system.file(\"extdata\", \"RNA.fwd.bw\", package = \"tidyCoverage\"),     RNA_rev = system.file(\"extdata\", \"RNA.rev.bw\", package = \"tidyCoverage\"),      Scc1 = system.file(\"extdata\", \"Scc1.bw\", package = \"tidyCoverage\") ) |> map(import, as = 'Rle') ce <- CoverageExperiment(tracks, features, width = 5000, center = TRUE, scale = TRUE) ac <- aggregate(ce)   ############################################################################# ## 1. Plotting aggregated coverage #############################################################################  ac |>      as_tibble() |>      ggplot() +      geom_aggrcoverage(aes(col = track)) +      facet_grid(track ~ features) +      geom_vline(xintercept = 0, color = 'black', linetype = 'dashed', linewidth = 0.5)   ############################################################################# ## 2. Plotting track coverages over individual loci #############################################################################  ce2 <- CoverageExperiment(     tracks,      GRangesList(list(locus1 = \"II:400001-455000\", locus2 = \"IV:720001-775000\")),      window = 50 ) expand(ce2) |>      mutate(coverage = ifelse(track != 'Scc1', scales::oob_squish(coverage, c(0, 50)), coverage)) |>     ggplot() +      geom_coverage(aes(fill = track)) +      facet_grid(track~features, scales = 'free')"},{"path":"/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. dplyr as_tibble S4Vectors aggregate tidyr expand","code":""},{"path":"/reference/reexports.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Objects exported from other packages — reexports","text":"Depending re-exported function","code":""},{"path":"/reference/reexports.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Objects exported from other packages — reexports","text":"","code":"1 + 1 #> [1] 2"},{"path":"/reference/show.html","id":null,"dir":"Reference","previous_headings":"","what":"show — show","title":"show — show","text":"show method CoverageExperiment AggregatedCoverage objects","code":""},{"path":"/reference/show.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"show — show","text":"","code":"# S4 method for class 'CoverageExperiment' show(object)  # S4 method for class 'AggregatedCoverage' show(object)  # S3 method for class 'CoverageExperiment' print(x, ..., n = NULL)  # S3 method for class 'AggregatedCoverage' print(x, ..., n = NULL)  # S3 method for class 'tidyCoverageExperiment' tbl_format_header(x, setup, ...)  # S3 method for class 'tidyAggregatedCoverage' tbl_format_header(x, setup, ...)"},{"path":"/reference/show.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"show — show","text":"object CoverageExperiment AggregatedCoverage object x Object format print. ... Passed tbl_format_setup(). n Number rows show. NULL, default, print rows less print_max option. Otherwise, print many rows specified print_min option. setup setup object returned pillar::tbl_format_setup().","code":""},{"path":"/reference/show.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"show — show","text":"Prints message console describing contents CoverageExperimentorAggregatedCoverage` objects.","code":""},{"path":"/reference/show.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"show — show","text":"","code":"data(ce) print(ce) #> class: CoverageExperiment  #> dim: 1 2  #> metadata(0): #> assays(1): coverage #> rownames(1): Scc1 #> rowData names(2): features n #> colnames(2): RNA_fwd RNA_rev #> colData names(1): track #> width: 3000 data(ac) print(ac) #> class: AggregatedCoverage  #> dim: 1 2  #> metadata(0): #> assays(8): mean median ... ci_low ci_high #> rownames(1): Scc1 #> rowData names(1): features #> colnames(2): RNA_fwd RNA_rev #> colData names(1): track #> width: 3000 #> binning: 1"}]
