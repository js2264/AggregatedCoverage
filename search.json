[{"path":"/articles/tidyCoverage.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Introduction to tidyCoverage","text":"Genome-wide assays provide powerful methods profile composition, conformation activity chromatin. Linear “coverage” tracks (generally stored .bigwig files) one outputs obtained processing raw high-throughput sequencing data. coverage tracks can inspected genome interactive browsers (e.g. IGV) visually appreciate local global variations coverage specific genomic assays. coverage signal aggregated multiple genomic features can also computed. approach efficient summarize compare coverage chromatin modalities (e.g. protein binding profiles ChIP-seq, transcription profiles RNA-seq, chromatin accessibility ATAC-seq, …) hundreds thousands genomic features interest. unlocks quantitative description coverage groups genomic features. tidyCoverage implements CoverageExperiment AggregatedCoverage classes built top SummarizedExperiment class. classes formalize extraction aggregation coverage tracks sets genomic features interests.","code":""},{"path":[]},{"path":"/articles/tidyCoverage.html","id":"coverageexperiment","dir":"Articles","previous_headings":"CoverageExperiment and AggregatedCoverage classes","what":"CoverageExperiment","title":"Introduction to tidyCoverage","text":"","code":"library(tidyCoverage) showClass(\"CoverageExperiment\") #> Class \"CoverageExperiment\" [package \"tidyCoverage\"] #>  #> Slots: #>                                                                  #> Name:                     rowRanges                      colData #> Class: GenomicRanges_OR_GRangesList                    DataFrame #>                                                                  #> Name:                        assays                        NAMES #> Class:               Assays_OR_NULL            character_OR_NULL #>                                                                  #> Name:               elementMetadata                     metadata #> Class:                    DataFrame                         list #>  #> Extends:  #> Class \"RangedSummarizedExperiment\", directly #> Class \"SummarizedExperiment\", by class \"RangedSummarizedExperiment\", distance 2 #> Class \"RectangularData\", by class \"RangedSummarizedExperiment\", distance 3 #> Class \"Vector\", by class \"RangedSummarizedExperiment\", distance 3 #> Class \"Annotated\", by class \"RangedSummarizedExperiment\", distance 4 #> Class \"vector_OR_Vector\", by class \"RangedSummarizedExperiment\", distance 4  data(ce) ce #> class: CoverageExperiment  #> dim: 1 2  #> metadata(0): #> assays(1): coverage #> rownames(1): Scc1 #> rowData names(2): features n #> colnames(2): RNA_fwd RNA_rev #> colData names(1): track #> width: 3000  rowData(ce) #> DataFrame with 1 row and 2 columns #>         features         n #>      <character> <integer> #> Scc1        Scc1       614  rowRanges(ce) #> GRangesList object of length 1: #> $Scc1 #> GRanges object with 614 ranges and 2 metadata columns: #>         seqnames          ranges strand |        name     score #>            <Rle>       <IRanges>  <Rle> | <character> <numeric> #>     [1]       II       4290-7289      + |     YBL109W         0 #>     [2]       II       6677-9676      + |     YBL108W         0 #>     [3]       II      7768-10767      + |   YBL107W-A         0 #>     [4]       II     22598-25597      + |     YBL102W         0 #>     [5]       II     26927-29926      + |   YBL100W-C         0 #>     ...      ...             ...    ... .         ...       ... #>   [610]       IV 1506505-1509504      + |     YDR536W         0 #>   [611]       IV 1509402-1512401      + |     YDR538W         0 #>   [612]       IV 1510594-1513593      + |     YDR539W         0 #>   [613]       IV 1521749-1524748      + |     YDR542W         0 #>   [614]       IV 1524821-1527820      + |     YDR545W         0 #>   ------- #>   seqinfo: 3 sequences from an unspecified genome  colData(ce) #> DataFrame with 2 rows and 1 column #>               track #>         <character> #> RNA_fwd     RNA_fwd #> RNA_rev     RNA_rev  assays(ce) #> List of length 1 #> names(1): coverage  assay(ce, 'coverage') #>      RNA_fwd        RNA_rev        #> Scc1 numeric,184200 numeric,184200  assay(ce[1, 1], 'coverage') #>      RNA_fwd        #> Scc1 numeric,184200"},{"path":"/articles/tidyCoverage.html","id":"aggregatedcoverage","dir":"Articles","previous_headings":"CoverageExperiment and AggregatedCoverage classes","what":"AggregatedCoverage","title":"Introduction to tidyCoverage","text":"","code":"showClass(\"AggregatedCoverage\") #> Class \"AggregatedCoverage\" [package \"tidyCoverage\"] #>  #> Slots: #>                                                                  #> Name:                     rowRanges                      colData #> Class: GenomicRanges_OR_GRangesList                    DataFrame #>                                                                  #> Name:                        assays                        NAMES #> Class:               Assays_OR_NULL            character_OR_NULL #>                                                                  #> Name:               elementMetadata                     metadata #> Class:                    DataFrame                         list #>  #> Extends:  #> Class \"RangedSummarizedExperiment\", directly #> Class \"SummarizedExperiment\", by class \"RangedSummarizedExperiment\", distance 2 #> Class \"RectangularData\", by class \"RangedSummarizedExperiment\", distance 3 #> Class \"Vector\", by class \"RangedSummarizedExperiment\", distance 3 #> Class \"Annotated\", by class \"RangedSummarizedExperiment\", distance 4 #> Class \"vector_OR_Vector\", by class \"RangedSummarizedExperiment\", distance 4  data(ac) ac #> class: AggregatedCoverage  #> dim: 1 2  #> metadata(0): #> assays(8): mean median ... ci_low ci_high #> rownames(1): Scc1 #> rowData names(1): features #> colnames(2): RNA_fwd RNA_rev #> colData names(1): track #> width: 3000 #> binning: 1  rowData(ac) #> DataFrame with 1 row and 1 column #>         features #>      <character> #> Scc1        Scc1  rowRanges(ac) #> GRangesList object of length 1: #> $Scc1 #> GRanges object with 614 ranges and 2 metadata columns: #>         seqnames          ranges strand |        name     score #>            <Rle>       <IRanges>  <Rle> | <character> <numeric> #>     [1]       II   234992-237991      + |     YBL002W         0 #>     [2]       II   226136-229135      + |     YBL004W         0 #>     [3]       II   215970-218969      + |     YBL005W         0 #>     [4]       II   219830-222829      + |   YBL005W-B         0 #>     [5]       II   215211-218210      + |   YBL006W-A         0 #>     ...      ...             ...    ... .         ...       ... #>   [610]       IV 1506505-1509504      + |     YDR536W         0 #>   [611]       IV 1509402-1512401      + |     YDR538W         0 #>   [612]       IV 1510594-1513593      + |     YDR539W         0 #>   [613]       IV 1521749-1524748      + |     YDR542W         0 #>   [614]       IV 1524821-1527820      + |     YDR545W         0 #>   ------- #>   seqinfo: 3 sequences from an unspecified genome  colData(ac) #> DataFrame with 2 rows and 1 column #>               track #>         <character> #> RNA_fwd     RNA_fwd #> RNA_rev     RNA_rev  assays(ac) #> List of length 8 #> names(8): mean median min max sd se ci_low ci_high  assay(ac, 'mean') #>      RNA_fwd      RNA_rev      #> Scc1 numeric,3000 numeric,3000  assay(ac[1, 1], 'mean') #>      RNA_fwd      #> Scc1 numeric,3000"},{"path":[]},{"path":"/articles/tidyCoverage.html","id":"create-a-coverageexperiment-object","dir":"Articles","previous_headings":"Manipulate CoverageExperiment objects","what":"Create a CoverageExperiment object","title":"Introduction to tidyCoverage","text":"","code":"library(rtracklayer) bw_file <- system.file(\"extdata\", \"MNase.bw\", package = \"tidyCoverage\") bed_file <- system.file(\"extdata\", \"TSSs.bed\", package = \"tidyCoverage\") CE <- CoverageExperiment(     tracks = import(bw_file, as = \"Rle\"),      features = import(bed_file),     width = 3000 ) CE #> class: CoverageExperiment  #> dim: 1 1  #> metadata(0): #> assays(1): coverage #> rownames(1): features #> rowData names(2): features n #> colnames(1): track #> colData names(1): track #> width: 3000"},{"path":"/articles/tidyCoverage.html","id":"bin-a-coverageexperiment-object","dir":"Articles","previous_headings":"Manipulate CoverageExperiment objects","what":"Bin a CoverageExperiment object","title":"Introduction to tidyCoverage","text":"","code":"coarsen(CE, window = 50) #> class: CoverageExperiment  #> dim: 1 1  #> metadata(0): #> assays(1): coverage #> rownames(1): features #> rowData names(2): features n #> colnames(1): track #> colData names(1): track #> width: 3000"},{"path":"/articles/tidyCoverage.html","id":"expand-a-coverageexperiment-object","dir":"Articles","previous_headings":"Manipulate CoverageExperiment objects","what":"Expand a CoverageExperiment object","title":"Introduction to tidyCoverage","text":"","code":"expand(CE) #> # A tibble: 5,355,000 × 7 #> # Groups:   track, features, ranges [1,785] #>    track features chr   ranges         strand coord coverage #>    <chr> <chr>    <chr> <chr>          <chr>  <dbl>    <dbl> #>  1 track features II    II:4290-7289:+ +       4290        0 #>  2 track features II    II:4290-7289:+ +       4291        0 #>  3 track features II    II:4290-7289:+ +       4292        0 #>  4 track features II    II:4290-7289:+ +       4293        0 #>  5 track features II    II:4290-7289:+ +       4294        0 #>  6 track features II    II:4290-7289:+ +       4295        0 #>  7 track features II    II:4290-7289:+ +       4296        0 #>  8 track features II    II:4290-7289:+ +       4297        0 #>  9 track features II    II:4290-7289:+ +       4298        0 #> 10 track features II    II:4290-7289:+ +       4299        0 #> # ℹ 5,354,990 more rows"},{"path":"/articles/tidyCoverage.html","id":"plot-coverage-of-a-set-of-tracks-over-a-single-genomic-locus","dir":"Articles","previous_headings":"Manipulate CoverageExperiment objects","what":"Plot coverage of a set of tracks over a single genomic locus","title":"Introduction to tidyCoverage","text":"","code":"library(ggplot2)  # ~~~~~~~~~~~~~~~ Import coverage tracks into a named list ~~~~~~~~~~~~~~~ # tracks <- list(     Scc1 = system.file(\"extdata\", \"Scc1.bw\", package = \"tidyCoverage\"),      RNA_fwd = system.file(\"extdata\", \"RNA.fwd.bw\", package = \"tidyCoverage\"),     RNA_rev = system.file(\"extdata\", \"RNA.rev.bw\", package = \"tidyCoverage\"),     PolII = system.file(\"extdata\", \"PolII.bw\", package = \"tidyCoverage\"),      MNase = system.file(\"extdata\", \"MNase.bw\", package = \"tidyCoverage\") ) |> BigWigFileList()  locus <- \"II:450001-475000\" CE2 <- CoverageExperiment(     tracks = tracks,      features = GRanges(locus),     width = width   (GRanges(locus)) ) |> coarsen(window = width(GRanges(locus))/1000) CE2 |>      expand() |>      ggplot(aes(x = coord, y = coverage)) +          geom_col(aes(fill = track, col = track)) +          facet_grid(track~., scales = 'free') +          scale_x_continuous(expand = c(0, 0)) +          theme_bw() +          theme(legend.position = \"none\", aspect.ratio = 0.1)"},{"path":[]},{"path":"/articles/tidyCoverage.html","id":"aggregate-a-coverageexperiment-into-an-aggregatedcoverage-object","dir":"Articles","previous_headings":"Manipulate AggregatedCoverage objects","what":"Aggregate a CoverageExperiment into an AggregatedCoverage object","title":"Introduction to tidyCoverage","text":"","code":"AC <- aggregate(CE) AC #> class: AggregatedCoverage  #> dim: 1 1  #> metadata(0): #> assays(8): mean median ... ci_low ci_high #> rownames(1): features #> rowData names(2): features n #> colnames(1): track #> colData names(1): track #> width: 3000 #> binning: 1  AC10 <- aggregate(CE, bin = 10) AC10 #> class: AggregatedCoverage  #> dim: 1 1  #> metadata(0): #> assays(8): mean median ... ci_low ci_high #> rownames(1): features #> rowData names(2): features n #> colnames(1): track #> colData names(1): track #> width: 3000 #> binning: 10"},{"path":"/articles/tidyCoverage.html","id":"aggregatedcoverage-over-multiple-tracks-feature-sets","dir":"Articles","previous_headings":"Manipulate AggregatedCoverage objects","what":"AggregatedCoverage over multiple tracks / feature sets","title":"Introduction to tidyCoverage","text":"","code":"library(purrr) #>  #> Attaching package: 'purrr' #> The following object is masked from 'package:GenomicRanges': #>  #>     reduce #> The following object is masked from 'package:IRanges': #>  #>     reduce #> The following object is masked from 'package:base': #>  #>     %||% library(plyranges) #>  #> Attaching package: 'plyranges' #> The following object is masked from 'package:IRanges': #>  #>     slice #> The following object is masked from 'package:stats': #>  #>     filter  # ~~~~~~~~~~~~~~~ Import genomic features into a named list ~~~~~~~~~~~~~~~ # features <- list(     TSSs = system.file(\"extdata\", \"TSSs.bed\", package = \"tidyCoverage\"),     `Convergent transcription` = system.file(\"extdata\", \"conv_transcription_loci.bed\", package = \"tidyCoverage\") ) |> map(import) |> map(filter, strand == '+')   # ~~~~~~~~~~~~~~~ Import coverage tracks into a named list ~~~~~~~~~~~~~~~ # tracks <- list(     Scc1 = system.file(\"extdata\", \"Scc1.bw\", package = \"tidyCoverage\"),      RNA_fwd = system.file(\"extdata\", \"RNA.fwd.bw\", package = \"tidyCoverage\"),     RNA_rev = system.file(\"extdata\", \"RNA.rev.bw\", package = \"tidyCoverage\"),     PolII = system.file(\"extdata\", \"PolII.bw\", package = \"tidyCoverage\"),      MNase = system.file(\"extdata\", \"MNase.bw\", package = \"tidyCoverage\") ) |> map(import, as = 'Rle')  # ~~~~~~~~~~~~~~~ Compute aggregated coverage ~~~~~~~~~~~~~~~ # CE <- CoverageExperiment(tracks, features, width = 5000, scale = TRUE, center = TRUE) CE #> class: CoverageExperiment  #> dim: 2 5  #> metadata(0): #> assays(1): coverage #> rownames(2): TSSs Convergent transcription #> rowData names(2): features n #> colnames(5): Scc1 RNA_fwd RNA_rev PolII MNase #> colData names(1): track #> width: 5000  AC <- aggregate(CE) AC #> class: AggregatedCoverage  #> dim: 2 5  #> metadata(0): #> assays(8): mean median ... ci_low ci_high #> rownames(2): TSSs Convergent transcription #> rowData names(2): features n #> colnames(5): Scc1 RNA_fwd RNA_rev PolII MNase #> colData names(1): track #> width: 5000 #> binning: 1"},{"path":"/articles/tidyCoverage.html","id":"plot-aggregated-coverages-with-ggplot2","dir":"Articles","previous_headings":"Manipulate AggregatedCoverage objects","what":"Plot aggregated coverages with ggplot2","title":"Introduction to tidyCoverage","text":"","code":"as_tibble(AC) |>      ggplot(aes(x = coord, y = mean)) +      geom_ribbon(aes(ymin = ci_low, ymax = ci_high, fill = track), alpha = 0.2) +      geom_line(aes(col = track)) +      facet_grid(features ~ .) +      labs(x = 'Distance from genomic feature', y = 'Mean coverage') +      theme_bw() +      theme(legend.position = 'top')"},{"path":"/articles/tidyCoverage.html","id":"use-a-tidy-grammar","dir":"Articles","previous_headings":"Manipulate AggregatedCoverage objects","what":"Use a tidy grammar","title":"Introduction to tidyCoverage","text":"","code":"library(tidySummarizedExperiment) #> Loading required package: ttservice #>  #> Attaching package: 'tidySummarizedExperiment' #> The following object is masked from 'package:ttservice': #>  #>     plot_ly CE |>      filter(track != 'Scc1') |>      filter(features == 'Convergent transcription') |>      aggregate() |>      ggplot(aes(x = coord, y = mean)) +      geom_ribbon(aes(ymin = ci_low, ymax = ci_high, fill = track), alpha = 0.2) +      geom_line(aes(col = track)) +      facet_grid(track ~ .) +      labs(x = 'Distance from locus of convergent transcription', y = 'RNA-seq coverage') +      theme_bw() +      theme(legend.position = 'top')"},{"path":"/articles/tidyCoverage.html","id":"coarsen-the-aggregated-coverage-statistics","dir":"Articles","previous_headings":"Manipulate AggregatedCoverage objects","what":"Coarsen the aggregated coverage statistics","title":"Introduction to tidyCoverage","text":"","code":"CE |>      filter(track != 'Scc1') |>      filter(features == 'Convergent transcription') |>      aggregate(bin = 200) |>      ggplot(aes(x = coord, y = mean)) +      geom_ribbon(aes(ymin = ci_low, ymax = ci_high, fill = track), alpha = 0.2) +      geom_line(aes(col = track)) +      geom_point(aes(col = track)) +      facet_grid(track ~ .) +      labs(x = 'Distance from locus of convergent transcription', y = 'Mean coverage') +      theme_bw() +      theme(legend.position = 'top')"},{"path":[]},{"path":"/articles/tidyCoverage.html","id":"recover-tsss-of-forward-human-genes","dir":"Articles","previous_headings":"Example use case: AnnotationHub and TxDb resources","what":"Recover TSSs of forward human genes","title":"Introduction to tidyCoverage","text":"","code":"txdb <- TxDb.Hsapiens.UCSC.hg19.knownGene::TxDb.Hsapiens.UCSC.hg19.knownGene TSSs <- GenomicFeatures::genes(txdb) |>      filter(strand == '+') |>      anchor_5p() |>      mutate(width = 1) #>   403 genes were dropped because they have exons located on both strands #>   of the same reference sequence or on more than one reference sequence, #>   so cannot be represented by a single genomic range. #>   Use 'single.strand.genes.only=FALSE' to get all the genes in a #>   GRangesList object, or use suppressMessages() to suppress this message."},{"path":"/articles/tidyCoverage.html","id":"recover-h3k4me3-coverage-track-from-encode","dir":"Articles","previous_headings":"Example use case: AnnotationHub and TxDb resources","what":"Recover H3K4me3 coverage track from ENCODE","title":"Introduction to tidyCoverage","text":"","code":"library(AnnotationHub) #> Loading required package: BiocFileCache #> Loading required package: dbplyr #>  #> Attaching package: 'dbplyr' #> The following objects are masked from 'package:dplyr': #>  #>     ident, sql #>  #> Attaching package: 'AnnotationHub' #> The following object is masked from 'package:rtracklayer': #>  #>     hubUrl #> The following object is masked from 'package:Biobase': #>  #>     cache ah <- AnnotationHub() ah['AH34904'] #> AnnotationHub with 1 record #> # snapshotDate(): 2023-11-08 #> # names(): AH34904 #> # $dataprovider: BroadInstitute #> # $species: Homo sapiens #> # $rdataclass: BigWigFile #> # $rdatadateadded: 2015-05-07 #> # $title: UCSD.H1.H3K4me3.LL227.fc.signal.bigwig #> # $description: Bigwig File containing fold enrichment signal tracks from Ep... #> # $taxonomyid: 9606 #> # $genome: hg19 #> # $sourcetype: BigWig #> # $sourceurl: http://egg2.wustl.edu/roadmap/data/byFileType/signal/unconsoli... #> # $sourcesize: 97131347 #> # $tags: c(\"EpigenomeRoadMap\", \"signal\", \"unconsolidated\", #> #   \"foldChange\", \"NA\")  #> # retrieve record with 'object[[\"AH34904\"]]' H3K4me3_bw <- ah[['AH34904']] #> loading from cache"},{"path":"/articles/tidyCoverage.html","id":"compute-the-aggregated-coverage-of-h3k4me3-3kb-around-the-tsss-of-forward-human-genes","dir":"Articles","previous_headings":"Example use case: AnnotationHub and TxDb resources","what":"Compute the aggregated coverage of H3K4me3 ± 3kb around the TSSs of forward human genes","title":"Introduction to tidyCoverage","text":"","code":"CE <- CoverageExperiment(     H3K4me3_bw, TSSs,      width = 6000,      scale = TRUE, center = TRUE ) AC <- aggregate(CE) as_tibble(AC) |>      ggplot(aes(x = coord, y = mean)) +      geom_ribbon(aes(ymin = ci_low, ymax = ci_high, fill = track), alpha = 0.2) +      geom_line(aes(col = track)) +      facet_grid(track ~ .) +      labs(x = 'Distance from TSSs', y = 'Mean coverage') +      theme_bw() +      theme(legend.position = 'top')"},{"path":"/articles/tidyCoverage.html","id":"with-more-genomic-tracks","dir":"Articles","previous_headings":"Example use case: AnnotationHub and TxDb resources","what":"With more genomic tracks","title":"Introduction to tidyCoverage","text":"","code":"# ~~~~~~~~~~ Recover 15 different histone PTM ChIP-seq tracks ~~~~~~~~~~ # ids <- c(     'AH35163', 'AH35165', 'AH35167', 'AH35170', 'AH35173', 'AH35176',      'AH35178', 'AH35180', 'AH35182', 'AH35185', 'AH35187', 'AH35189',      'AH35191', 'AH35193', 'AH35196' ) names(ids) <- mcols(ah[ids])$title |>      gsub(\".*IMR90.\", \"\", x = _) |>      gsub(\"\\\\..*\", \"\", x = _) bws <- map(ids, ~ ah[[.x]]) |>      map(resource) |>      BigWigFileList() names(bws) <- names(ids)  # ~~~~~~~~~~ Computing coverage over TSSs ~~~~~~~~~~ # AC <- CoverageExperiment(     bws, TSSs,      width = 4000,      scale = TRUE, center = TRUE ) |> aggregate()  # ~~~~~~~~~~ Plot the resulting AggregatedCoverage object ~~~~~~~~~~ # AC |>      as_tibble() |>      mutate(         histone = dplyr::case_when(             stringr::str_detect(track, 'H2A') ~ \"H2A\",              stringr::str_detect(track, 'H2B') ~ \"H2B\",              stringr::str_detect(track, 'H3') ~ \"H3\"         )     ) |>      ggplot(aes(x = coord, y = mean)) +      geom_ribbon(aes(ymin = ci_low, ymax = ci_high, fill = track), alpha = 0.2) +      geom_line(aes(col = track)) +      facet_grid(~histone) +      labs(x = 'Distance from TSSs', y = 'Mean histone PTM coverage') +      theme_bw() +      theme(legend.position = 'top') +      hues::scale_colour_iwanthue() +      hues::scale_fill_iwanthue()"},{"path":"/articles/tidyCoverage.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Introduction to tidyCoverage","text":"","code":"sessionInfo() #> R Under development (unstable) (2023-11-22 r85609) #> Platform: x86_64-pc-linux-gnu #> Running under: Ubuntu 22.04.3 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               #>  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8     #>  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8    #>  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                  #>  [9] LC_ADDRESS=C               LC_TELEPHONE=C             #> [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C        #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] AnnotationHub_3.11.0            BiocFileCache_2.11.1            #>  [3] dbplyr_2.4.0                    tidyr_1.3.0                     #>  [5] dplyr_1.1.4                     tidySummarizedExperiment_1.13.0 #>  [7] ttservice_0.4.0                 plyranges_1.23.0                #>  [9] purrr_1.0.2                     ggplot2_3.4.4                   #> [11] rtracklayer_1.63.0              tidyCoverage_0.99.0             #> [13] SummarizedExperiment_1.33.1     Biobase_2.63.0                  #> [15] GenomicRanges_1.55.1            GenomeInfoDb_1.39.1             #> [17] IRanges_2.37.0                  S4Vectors_0.41.2                #> [19] BiocGenerics_0.49.1             MatrixGenerics_1.15.0           #> [21] matrixStats_1.1.0               BiocStyle_2.31.0                #>  #> loaded via a namespace (and not attached): #>   [1] jsonlite_1.8.8                          #>   [2] magrittr_2.0.3                          #>   [3] GenomicFeatures_1.55.1                  #>   [4] farver_2.1.1                            #>   [5] rmarkdown_2.25                          #>   [6] fs_1.6.3                                #>   [7] BiocIO_1.13.0                           #>   [8] zlibbioc_1.49.0                         #>   [9] ragg_1.2.6                              #>  [10] vctrs_0.6.5                             #>  [11] memoise_2.0.1                           #>  [12] Rsamtools_2.19.2                        #>  [13] RCurl_1.98-1.13                         #>  [14] htmltools_0.5.7                         #>  [15] S4Arrays_1.3.1                          #>  [16] TxDb.Hsapiens.UCSC.hg19.knownGene_3.2.2 #>  [17] progress_1.2.3                          #>  [18] curl_5.2.0                              #>  [19] SparseArray_1.3.1                       #>  [20] sass_0.4.8                              #>  [21] bslib_0.6.1                             #>  [22] htmlwidgets_1.6.4                       #>  [23] desc_1.4.2                              #>  [24] plotly_4.10.3                           #>  [25] cachem_1.0.8                            #>  [26] GenomicAlignments_1.39.0                #>  [27] mime_0.12                               #>  [28] lifecycle_1.0.4                         #>  [29] pkgconfig_2.0.3                         #>  [30] Matrix_1.6-4                            #>  [31] R6_2.5.1                                #>  [32] fastmap_1.1.1                           #>  [33] GenomeInfoDbData_1.2.11                 #>  [34] shiny_1.8.0                             #>  [35] digest_0.6.33                           #>  [36] colorspace_2.1-0                        #>  [37] AnnotationDbi_1.65.2                    #>  [38] rprojroot_2.0.4                         #>  [39] textshaping_0.3.7                       #>  [40] RSQLite_2.3.3                           #>  [41] filelock_1.0.2                          #>  [42] labeling_0.4.3                          #>  [43] fansi_1.0.6                             #>  [44] httr_1.4.7                              #>  [45] abind_1.4-5                             #>  [46] compiler_4.4.0                          #>  [47] bit64_4.0.5                             #>  [48] withr_2.5.2                             #>  [49] BiocParallel_1.37.0                     #>  [50] DBI_1.1.3                               #>  [51] highr_0.10                              #>  [52] biomaRt_2.59.0                          #>  [53] rappdirs_0.3.3                          #>  [54] DelayedArray_0.29.0                     #>  [55] rjson_0.2.21                            #>  [56] tools_4.4.0                             #>  [57] interactiveDisplayBase_1.41.0           #>  [58] httpuv_1.6.13                           #>  [59] glue_1.6.2                              #>  [60] restfulr_0.0.15                         #>  [61] promises_1.2.1                          #>  [62] grid_4.4.0                              #>  [63] generics_0.1.3                          #>  [64] gtable_0.3.4                            #>  [65] data.table_1.14.8                       #>  [66] hms_1.1.3                               #>  [67] xml2_1.3.6                              #>  [68] utf8_1.2.4                              #>  [69] XVector_0.43.0                          #>  [70] BiocVersion_3.19.1                      #>  [71] pillar_1.9.0                            #>  [72] stringr_1.5.1                           #>  [73] later_1.3.2                             #>  [74] lattice_0.22-5                          #>  [75] bit_4.0.5                               #>  [76] tidyselect_1.2.0                        #>  [77] Biostrings_2.71.1                       #>  [78] knitr_1.45                              #>  [79] bookdown_0.37                           #>  [80] xfun_0.41                               #>  [81] stringi_1.8.2                           #>  [82] lazyeval_0.2.2                          #>  [83] yaml_2.3.7                              #>  [84] evaluate_0.23                           #>  [85] codetools_0.2-19                        #>  [86] tibble_3.2.1                            #>  [87] BiocManager_1.30.22                     #>  [88] cli_3.6.1                               #>  [89] xtable_1.8-4                            #>  [90] systemfonts_1.0.5                       #>  [91] munsell_0.5.0                           #>  [92] jquerylib_0.1.4                         #>  [93] Rcpp_1.0.11                             #>  [94] png_0.1-8                               #>  [95] XML_3.99-0.16                           #>  [96] parallel_4.4.0                          #>  [97] ellipsis_0.3.2                          #>  [98] pkgdown_2.0.7                           #>  [99] blob_1.2.4                              #> [100] prettyunits_1.2.0                       #> [101] bitops_1.0-7                            #> [102] viridisLite_0.4.2                       #> [103] scales_1.3.0                            #> [104] crayon_1.5.2                            #> [105] rlang_1.1.2                             #> [106] KEGGREST_1.43.0"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jacques Serizay. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Jacques (2023). Jacques' Package. doi:10.18129/B9.bioc.AggregatedCoverage, https://github.com//AggregatedCoverage - R package version 0.99.0, http://www.bioconductor.org/packages/AggregatedCoverage. Jacques (2023). “Jacques' Package.” bioRxiv. doi:10.1101/TODO, https://www.biorxiv.org/content/10.1101/TODO.","code":"@Manual{,   title = {Jacques' Package},   author = {{Jacques}},   year = {2023},   url = {http://www.bioconductor.org/packages/AggregatedCoverage},   note = {https://github.com//AggregatedCoverage - R package version 0.99.0},   doi = {10.18129/B9.bioc.AggregatedCoverage}, } @Article{,   title = {Jacques' Package},   author = {{Jacques}},   year = {2023},   journal = {bioRxiv},   doi = {10.1101/TODO},   url = {https://www.biorxiv.org/content/10.1101/TODO}, }"},{"path":[]},{"path":"/index.html","id":"load-libraries-and-example-datasets","dir":"","previous_headings":"","what":"Load libraries and example datasets","title":"Extract and aggregate genomic coverage over features of interest","text":"","code":"library(tidyCoverage) library(tidySummarizedExperiment) library(rtracklayer) library(plyranges) library(purrr) library(ggplot2)  # ~~~~~~~~~~~~~~~ Import genomic features into a named list ~~~~~~~~~~~~~~~ # features <- list(     TSSs = system.file(\"extdata\", \"TSSs.bed\", package = \"tidyCoverage\"),     conv_sites = system.file(\"extdata\", \"conv_transcription_loci.bed\", package = \"tidyCoverage\") ) |> map(~ import(.x))  # ~~~~~~~~~~~~ Import coverage tracks into a `BigWigFileList` ~~~~~~~~~~~~~ # tracks <- list(     Scc1 = system.file(\"extdata\", \"Scc1.bw\", package = \"tidyCoverage\"),      RNA_fwd = system.file(\"extdata\", \"RNA.fwd.bw\", package = \"tidyCoverage\"),     RNA_rev = system.file(\"extdata\", \"RNA.rev.bw\", package = \"tidyCoverage\"),     PolII = system.file(\"extdata\", \"PolII.bw\", package = \"tidyCoverage\"),      MNase = system.file(\"extdata\", \"MNase.bw\", package = \"tidyCoverage\") ) |> BigWigFileList()"},{"path":"/index.html","id":"plot-tracks-coverage-aggregated-over-genomic-features","dir":"","previous_headings":"","what":"Plot tracks coverage aggregated over genomic features","title":"Extract and aggregate genomic coverage over features of interest","text":"","code":"CoverageExperiment(tracks, features, width = 3000, ignore.strand = FALSE) |>      filter(track %in% c('MNase', 'PolII')) |>      filter(features == 'TSSs') |>      aggregate() |>      ggplot(aes(x = coord, y = mean)) +      geom_ribbon(aes(ymin = ci_low, ymax = ci_high, fill = track), alpha = 0.2) +      geom_line(aes(col = track)) +      facet_grid(track ~ ., scales = \"free\") +      labs(x = 'Distance from TSS', y = 'Signal coverage') +      theme_bw() +      theme(legend.position = 'top')"},{"path":"/index.html","id":"plot-coverage-over-a-single-locus","dir":"","previous_headings":"","what":"Plot coverage over a single locus","title":"Extract and aggregate genomic coverage over features of interest","text":"","code":"CoverageExperiment(tracks, GRanges(\"II:450001-455000\"), width = 5000) |>      expand() |>      ggplot(aes(x = coord, y = coverage)) +          geom_col(aes(fill = track, col = track)) +          facet_grid(track~., scales = 'free') +          scale_x_continuous(expand = c(0, 0)) +          theme_bw() +          theme(legend.position = \"none\", aspect.ratio = 0.1)"},{"path":"/reference/AggregatedCoverage.html","id":null,"dir":"Reference","previous_headings":"","what":"aggregate — AggregatedCoverage","title":"aggregate — AggregatedCoverage","text":"Bin coverage contained CoverageExperiment AggregatedCoverage object.","code":""},{"path":"/reference/AggregatedCoverage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"aggregate — AggregatedCoverage","text":"","code":"# S4 method for CoverageExperiment aggregate(x, bin = 1, ...)"},{"path":"/reference/AggregatedCoverage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"aggregate — AggregatedCoverage","text":"x CoverageExperiment object bin integer bin assay . width AggregatedCoverage object multiple bin. ... ignored","code":""},{"path":"/reference/AggregatedCoverage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"aggregate — AggregatedCoverage","text":"AggregatedCoverage object","code":""},{"path":"/reference/AggregatedCoverage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"aggregate — AggregatedCoverage","text":"","code":"data(ce) aggregate(ce, bin = 10) #> class: AggregatedCoverage  #> dim: 1 2  #> metadata(0): #> assays(8): mean median ... ci_low ci_high #> rownames(1): Scc1 #> rowData names(2): features n #> colnames(2): RNA_fwd RNA_rev #> colData names(1): track #> width: 3000 #> binning: 100"},{"path":"/reference/CoverageExperiment.html","id":null,"dir":"Reference","previous_headings":"","what":"CoverageExperiment — CoverageExperiment","title":"CoverageExperiment — CoverageExperiment","text":"#' @description","code":""},{"path":"/reference/CoverageExperiment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CoverageExperiment — CoverageExperiment","text":"","code":"CoverageExperiment(tracks, features, ...)  coarsen(x, window, ...)  # S4 method for BigWigFileList,GRangesList CoverageExperiment(   tracks,   features,   width,   center = FALSE,   scale = FALSE,   ignore.strand = TRUE,   window = 1,   BPPARAM = BiocParallel::bpparam() )  # S4 method for BigWigFileList,GRanges CoverageExperiment(tracks, features, ...)  # S4 method for BigWigFileList,list CoverageExperiment(tracks, features, ...)  # S4 method for BigWigFile,GRangesList CoverageExperiment(tracks, features, ...)  # S4 method for BigWigFile,GRanges CoverageExperiment(tracks, features, ...)  # S4 method for BigWigFile,list CoverageExperiment(tracks, features, ...)  # S4 method for list,GRangesList CoverageExperiment(   tracks,   features,   width,   center = FALSE,   scale = FALSE,   ignore.strand = TRUE,   window = 1,   BPPARAM = BiocParallel::bpparam() )  # S4 method for list,GRanges CoverageExperiment(tracks, features, ...)  # S4 method for list,list CoverageExperiment(tracks, features, ...)  # S4 method for RleList,GRangesList CoverageExperiment(tracks, features, ...)  # S4 method for RleList,GRanges CoverageExperiment(tracks, features, ...)  # S4 method for RleList,list CoverageExperiment(tracks, features, ...)  # S4 method for CoverageExperiment coarsen(x, window = 1, BPPARAM = BiocParallel::bpparam())"},{"path":"/reference/CoverageExperiment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CoverageExperiment — CoverageExperiment","text":"tracks genomic track imported RleList named list genomic tracks. features set features imported GRanges named GRangesList. ... Passed relevant method x CoverageExperiment object window integer coarsen coverage . width Width resize set genomic features scale, center Logical, whether scale /center tracks prior summarization ignore.strand Logical, whether take features strand information BPPARAM Passed BiocParallel.","code":""},{"path":"/reference/CoverageExperiment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CoverageExperiment — CoverageExperiment","text":"CoverageExperiment object","code":""},{"path":"/reference/CoverageExperiment.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"CoverageExperiment — CoverageExperiment","text":"CoverageExperiment objects store coverages individual tracks different sets features. coverage assay contains separate matrix combination track x features. CoverageExperiment objects instantiated using CoverageExperiment() #' function, can coarsened using coarsen() function.","code":""},{"path":"/reference/CoverageExperiment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CoverageExperiment — CoverageExperiment","text":"","code":"library(rtracklayer) library(purrr) #>  #> Attaching package: ‘purrr’ #> The following object is masked from ‘package:GenomicRanges’: #>  #>     reduce #> The following object is masked from ‘package:IRanges’: #>  #>     reduce #> The following object is masked from ‘package:base’: #>  #>     %||% library(plyranges) #>  #> Attaching package: ‘plyranges’ #> The following object is masked from ‘package:IRanges’: #>  #>     slice #> The following object is masked from ‘package:stats’: #>  #>     filter TSSs_bed <- system.file(\"extdata\", \"TSSs.bed\", package = \"tidyCoverage\") features <- import(TSSs_bed) |> filter(strand == '+')  ############################################################################# ## 1. Creating a `CoverageExperiment` object from a single BigWigFile #############################################################################  RNA_fwd <- system.file(\"extdata\", \"RNA.fwd.bw\", package = \"tidyCoverage\") tracks <- BigWigFile(RNA_fwd) CoverageExperiment(tracks, features, width = 5000) #> class: CoverageExperiment  #> dim: 1 1  #> metadata(0): #> assays(1): coverage #> rownames(1): features #> rowData names(2): features n #> colnames(1): track #> colData names(1): track #> width: 5000  ############################################################################# ## 2. Creating a `CoverageExperiment` object from a BigWigFileList #############################################################################  RNA_rev <- system.file(\"extdata\", \"RNA.rev.bw\", package = \"tidyCoverage\") tracks <- BigWigFileList(list(RNA_fwd = RNA_fwd, RNA_rev = RNA_rev)) CoverageExperiment(tracks, features, width = 5000) #> class: CoverageExperiment  #> dim: 1 2  #> metadata(0): #> assays(1): coverage #> rownames(1): features #> rowData names(2): features n #> colnames(2): RNA_fwd RNA_rev #> colData names(1): track #> width: 5000  ############################################################################# ## 3. Creating a `CoverageExperiment` object from imported bigwig files #############################################################################  tracks <- list(     RNA_fwd = system.file(\"extdata\", \"RNA.fwd.bw\", package = \"tidyCoverage\"),     RNA_rev = system.file(\"extdata\", \"RNA.rev.bw\", package = \"tidyCoverage\") ) |> map(import, as = 'Rle') CoverageExperiment(tracks, features, width = 5000) #> class: CoverageExperiment  #> dim: 1 2  #> metadata(0): #> assays(1): coverage #> rownames(1): features #> rowData names(2): features n #> colnames(2): RNA_fwd RNA_rev #> colData names(1): track #> width: 5000  ############################################################################# ## 4. Correct for strandness when recovering coverage #############################################################################  TSSs_bed <- system.file(\"extdata\", \"TSSs.bed\", package = \"tidyCoverage\") features <- list(     TSS_fwd = import(TSSs_bed) |> filter(strand == '+'),      TSS_rev = import(TSSs_bed) |> filter(strand == '-') ) tracks <- list(     RNA_fwd = system.file(\"extdata\", \"RNA.fwd.bw\", package = \"tidyCoverage\"),     RNA_rev = system.file(\"extdata\", \"RNA.rev.bw\", package = \"tidyCoverage\") ) |> map(import, as = 'Rle') CoverageExperiment(tracks, features, width = 5000, ignore.strand = FALSE) #> class: CoverageExperiment  #> dim: 2 2  #> metadata(0): #> assays(1): coverage #> rownames(2): TSS_fwd TSS_rev #> rowData names(2): features n #> colnames(2): RNA_fwd RNA_rev #> colData names(1): track #> width: 5000  ############################################################################# ## Aggregating a `CoverageExperiment` object ############################################################################# data(ce) coarsen(ce, window = 10) #> class: CoverageExperiment  #> dim: 1 2  #> metadata(0): #> assays(1): coverage #> rownames(1): Scc1 #> rowData names(2): features n #> colnames(2): RNA_fwd RNA_rev #> colData names(1): track #> width: 3000"},{"path":"/reference/as_tibble-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"as_tibble — as_tibble-methods","title":"as_tibble — as_tibble-methods","text":"Coerce CoverageExperiment AggregatedCoverage object tibble","code":""},{"path":"/reference/as_tibble-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"as_tibble — as_tibble-methods","text":"","code":"# S3 method for AggregatedCoverage as_tibble(x, ...)"},{"path":"/reference/as_tibble-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"as_tibble — as_tibble-methods","text":"x CoverageExperiment object ... ignored","code":""},{"path":"/reference/as_tibble-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"as_tibble — as_tibble-methods","text":"tibble","code":""},{"path":"/reference/as_tibble-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"as_tibble — as_tibble-methods","text":"","code":"data(ac) as_tibble(ac) #> # A tibble: 6,000 × 13 #>    .sample .feature track features coord    mean median   min   max    sd     se #>    <chr>   <chr>    <chr> <chr>    <dbl>   <dbl>  <dbl> <dbl> <dbl> <dbl>  <dbl> #>  1 RNA_fwd Scc1     RNA_… Scc1     -1500 -0.0921 -0.611 -3.25  10.5  1.42 0.0572 #>  2 RNA_fwd Scc1     RNA_… Scc1     -1499 -0.0915 -0.609 -3.25  10.5  1.42 0.0572 #>  3 RNA_fwd Scc1     RNA_… Scc1     -1498 -0.0898 -0.609 -3.25  10.5  1.42 0.0573 #>  4 RNA_fwd Scc1     RNA_… Scc1     -1497 -0.0914 -0.609 -3.25  10.5  1.42 0.0573 #>  5 RNA_fwd Scc1     RNA_… Scc1     -1496 -0.0915 -0.609 -3.25  10.5  1.42 0.0573 #>  6 RNA_fwd Scc1     RNA_… Scc1     -1495 -0.0912 -0.609 -3.25  10.5  1.42 0.0572 #>  7 RNA_fwd Scc1     RNA_… Scc1     -1494 -0.0912 -0.609 -3.25  10.5  1.42 0.0572 #>  8 RNA_fwd Scc1     RNA_… Scc1     -1493 -0.0915 -0.609 -3.25  10.5  1.42 0.0572 #>  9 RNA_fwd Scc1     RNA_… Scc1     -1492 -0.0907 -0.609 -3.25  10.5  1.42 0.0573 #> 10 RNA_fwd Scc1     RNA_… Scc1     -1491 -0.0903 -0.609 -3.25  10.5  1.42 0.0572 #> # ℹ 5,990 more rows #> # ℹ 2 more variables: ci_low <dbl>, ci_high <dbl>"},{"path":"/reference/data.html","id":null,"dir":"Reference","previous_headings":"","what":"Example CoverageExperiment and AggregatedCoverage objects — data","title":"Example CoverageExperiment and AggregatedCoverage objects — data","text":"Two example objects provided tidyCoverage package: ce: CoverageExperiment dataset containing stranded RNA-seq coverage (forward reverse) Scc1 peaks (± 1kb). ac: AggregatedCoverage object obtained aggregate(ce).","code":""},{"path":"/reference/data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example CoverageExperiment and AggregatedCoverage objects — data","text":"","code":"data(ce)  data(ac)"},{"path":"/reference/data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example CoverageExperiment and AggregatedCoverage objects — data","text":"CoverageExperiment object containing 1 features set 2 tracks. AggregatedCoverage object containing 1 features set 2 tracks.","code":""},{"path":"/reference/data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Example CoverageExperiment and AggregatedCoverage objects — data","text":"Data generated yeast (S288c) aligned reference R64-1-1.","code":""},{"path":"/reference/expand.html","id":null,"dir":"Reference","previous_headings":"","what":"Expand a CoverageExperiment object — expand,CoverageExperiment","title":"Expand a CoverageExperiment object — expand,CoverageExperiment","text":"CoverageExperiment object can coerced tibble using tidySummarizedExperiment package, turn coverage matrix \"long\" format. expand function provided allows one coerce CoverageExperiment object long data frame, adds ranges seqnames resulting tibble.","code":""},{"path":"/reference/expand.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expand a CoverageExperiment object — expand,CoverageExperiment","text":"","code":"# S4 method for CoverageExperiment expand(x, ...)"},{"path":"/reference/expand.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expand a CoverageExperiment object — expand,CoverageExperiment","text":"x CoverageExperiment object ... ignored","code":""},{"path":"/reference/expand.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expand a CoverageExperiment object — expand,CoverageExperiment","text":"tibble object","code":""},{"path":"/reference/expand.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expand a CoverageExperiment object — expand,CoverageExperiment","text":"","code":"data(ce) ce #> class: CoverageExperiment  #> dim: 1 2  #> metadata(0): #> assays(1): coverage #> rownames(1): Scc1 #> rowData names(2): features n #> colnames(2): RNA_fwd RNA_rev #> colData names(1): track #> width: 3000  expand(ce) #> # A tibble: 368,400 × 7 #> # Groups:   track, features, ranges [1,228] #>    track   features chr   ranges         strand coord coverage #>    <chr>   <chr>    <chr> <chr>          <chr>  <dbl>    <dbl> #>  1 RNA_fwd Scc1     II    II:4290-7289:+ +       4290   -0.257 #>  2 RNA_fwd Scc1     II    II:4290-7289:+ +       4300   -0.257 #>  3 RNA_fwd Scc1     II    II:4290-7289:+ +       4310   -0.257 #>  4 RNA_fwd Scc1     II    II:4290-7289:+ +       4320   -0.257 #>  5 RNA_fwd Scc1     II    II:4290-7289:+ +       4330   -0.257 #>  6 RNA_fwd Scc1     II    II:4290-7289:+ +       4340   -0.257 #>  7 RNA_fwd Scc1     II    II:4290-7289:+ +       4350   -0.257 #>  8 RNA_fwd Scc1     II    II:4290-7289:+ +       4360   -0.257 #>  9 RNA_fwd Scc1     II    II:4290-7289:+ +       4370   -0.257 #> 10 RNA_fwd Scc1     II    II:4290-7289:+ +       4380   -0.257 #> # ℹ 368,390 more rows"},{"path":"/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. dplyr as_tibble S4Vectors aggregate, expand","code":""},{"path":"/reference/reexports.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Objects exported from other packages — reexports","text":"Depending re-exported function","code":""},{"path":"/reference/reexports.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Objects exported from other packages — reexports","text":"","code":"1 + 1 #> [1] 2"},{"path":"/reference/show.html","id":null,"dir":"Reference","previous_headings":"","what":"show — show","title":"show — show","text":"show method CoverageExperiment AggregatedCoverage objects","code":""},{"path":"/reference/show.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"show — show","text":"","code":"# S4 method for CoverageExperiment show(object)  # S4 method for AggregatedCoverage show(object)  # S3 method for CoverageExperiment print(x, ..., n = NULL)  # S3 method for AggregatedCoverage print(x, ..., n = NULL)  # S3 method for tidyCoverageExperiment tbl_format_header(x, setup, ...)  # S3 method for tidyAggregatedCoverage tbl_format_header(x, setup, ...)"},{"path":"/reference/show.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"show — show","text":"object CoverageExperiment AggregatedCoverage object x Object format print. ... Passed tbl_format_setup(). n Number rows show. NULL, default, print rows less print_max option. Otherwise, print many rows specified print_min option. setup setup object returned pillar::tbl_format_setup().","code":""},{"path":"/reference/show.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"show — show","text":"Prints message console describing contents CoverageExperimentorAggregatedCoverage` objects.","code":""},{"path":"/reference/show.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"show — show","text":"","code":"data(ce) print(ce) #> class: CoverageExperiment  #> dim: 1 2  #> metadata(0): #> assays(1): coverage #> rownames(1): Scc1 #> rowData names(2): features n #> colnames(2): RNA_fwd RNA_rev #> colData names(1): track #> width: 3000 data(ac) print(ac) #> class: AggregatedCoverage  #> dim: 1 2  #> metadata(0): #> assays(8): mean median ... ci_low ci_high #> rownames(1): Scc1 #> rowData names(1): features #> colnames(2): RNA_fwd RNA_rev #> colData names(1): track #> width: 3000 #> binning: 1"}]
